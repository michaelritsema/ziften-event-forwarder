// Code generated by protoc-gen-go.
// source: WindowsUpdate.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type WindowsUpdate_UpdateOperation int32

const (
	WindowsUpdate_uoInstallation   WindowsUpdate_UpdateOperation = 1
	WindowsUpdate_uoUninstallation WindowsUpdate_UpdateOperation = 2
)

var WindowsUpdate_UpdateOperation_name = map[int32]string{
	1: "uoInstallation",
	2: "uoUninstallation",
}
var WindowsUpdate_UpdateOperation_value = map[string]int32{
	"uoInstallation":   1,
	"uoUninstallation": 2,
}

func (x WindowsUpdate_UpdateOperation) Enum() *WindowsUpdate_UpdateOperation {
	p := new(WindowsUpdate_UpdateOperation)
	*p = x
	return p
}
func (x WindowsUpdate_UpdateOperation) String() string {
	return proto1.EnumName(WindowsUpdate_UpdateOperation_name, int32(x))
}
func (x *WindowsUpdate_UpdateOperation) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(WindowsUpdate_UpdateOperation_value, data, "WindowsUpdate_UpdateOperation")
	if err != nil {
		return err
	}
	*x = WindowsUpdate_UpdateOperation(value)
	return nil
}
func (WindowsUpdate_UpdateOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor89, []int{0, 0}
}

type WindowsUpdate_OperationResultCode int32

const (
	WindowsUpdate_orcNotStarted          WindowsUpdate_OperationResultCode = 0
	WindowsUpdate_orcInProgress          WindowsUpdate_OperationResultCode = 1
	WindowsUpdate_orcSucceeded           WindowsUpdate_OperationResultCode = 2
	WindowsUpdate_orcSucceededWithErrors WindowsUpdate_OperationResultCode = 3
	WindowsUpdate_orcFailed              WindowsUpdate_OperationResultCode = 4
	WindowsUpdate_orcAborted             WindowsUpdate_OperationResultCode = 5
)

var WindowsUpdate_OperationResultCode_name = map[int32]string{
	0: "orcNotStarted",
	1: "orcInProgress",
	2: "orcSucceeded",
	3: "orcSucceededWithErrors",
	4: "orcFailed",
	5: "orcAborted",
}
var WindowsUpdate_OperationResultCode_value = map[string]int32{
	"orcNotStarted":          0,
	"orcInProgress":          1,
	"orcSucceeded":           2,
	"orcSucceededWithErrors": 3,
	"orcFailed":              4,
	"orcAborted":             5,
}

func (x WindowsUpdate_OperationResultCode) Enum() *WindowsUpdate_OperationResultCode {
	p := new(WindowsUpdate_OperationResultCode)
	*p = x
	return p
}
func (x WindowsUpdate_OperationResultCode) String() string {
	return proto1.EnumName(WindowsUpdate_OperationResultCode_name, int32(x))
}
func (x *WindowsUpdate_OperationResultCode) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(WindowsUpdate_OperationResultCode_value, data, "WindowsUpdate_OperationResultCode")
	if err != nil {
		return err
	}
	*x = WindowsUpdate_OperationResultCode(value)
	return nil
}
func (WindowsUpdate_OperationResultCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor89, []int{0, 1}
}

type WindowsUpdate struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID           *string                             `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	ClientApplicationID []string                            `protobuf:"bytes,3,rep,name=clientApplicationID" json:"clientApplicationID,omitempty"`
	DateLocal           []int64                             `protobuf:"varint,4,rep,name=dateLocal" json:"dateLocal,omitempty"`
	DateUTC             []int64                             `protobuf:"varint,5,rep,name=dateUTC" json:"dateUTC,omitempty"`
	Description         []string                            `protobuf:"bytes,6,rep,name=description" json:"description,omitempty"`
	Operation           []WindowsUpdate_UpdateOperation     `protobuf:"varint,7,rep,name=operation,enum=WindowsUpdate_UpdateOperation" json:"operation,omitempty"`
	ResultCode          []WindowsUpdate_OperationResultCode `protobuf:"varint,8,rep,name=resultCode,enum=WindowsUpdate_OperationResultCode" json:"resultCode,omitempty"`
	ServiceID           []string                            `protobuf:"bytes,9,rep,name=serviceID" json:"serviceID,omitempty"`
	SupportURL          []string                            `protobuf:"bytes,10,rep,name=supportURL" json:"supportURL,omitempty"`
	Title               []string                            `protobuf:"bytes,11,rep,name=title" json:"title,omitempty"`
	UpdateRevision      []int32                             `protobuf:"varint,12,rep,name=updateRevision" json:"updateRevision,omitempty"`
	UpdateID            []string                            `protobuf:"bytes,13,rep,name=updateID" json:"updateID,omitempty"`
	CategoryName        []string                            `protobuf:"bytes,14,rep,name=categoryName" json:"categoryName,omitempty"`
	CategoryType        []string                            `protobuf:"bytes,15,rep,name=categoryType" json:"categoryType,omitempty"`
	KbID                []string                            `protobuf:"bytes,16,rep,name=kbID" json:"kbID,omitempty"`
	SiteId              *string                             `protobuf:"bytes,17,opt,name=siteId" json:"siteId,omitempty"`
	Uuid                *string                             `protobuf:"bytes,18,opt,name=uuid" json:"uuid,omitempty"`
	// This UUID is to group WindowsUpdate, WindowsUpdateAvailable, WindowsUpdateServers and WindowsUpdateSettings message
	WuaScanUUID      *string `protobuf:"bytes,19,opt,name=wuaScanUUID" json:"wuaScanUUID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WindowsUpdate) Reset()                    { *m = WindowsUpdate{} }
func (m *WindowsUpdate) String() string            { return proto1.CompactTextString(m) }
func (*WindowsUpdate) ProtoMessage()               {}
func (*WindowsUpdate) Descriptor() ([]byte, []int) { return fileDescriptor89, []int{0} }

func (m *WindowsUpdate) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *WindowsUpdate) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *WindowsUpdate) GetClientApplicationID() []string {
	if m != nil {
		return m.ClientApplicationID
	}
	return nil
}

func (m *WindowsUpdate) GetDateLocal() []int64 {
	if m != nil {
		return m.DateLocal
	}
	return nil
}

func (m *WindowsUpdate) GetDateUTC() []int64 {
	if m != nil {
		return m.DateUTC
	}
	return nil
}

func (m *WindowsUpdate) GetDescription() []string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *WindowsUpdate) GetOperation() []WindowsUpdate_UpdateOperation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *WindowsUpdate) GetResultCode() []WindowsUpdate_OperationResultCode {
	if m != nil {
		return m.ResultCode
	}
	return nil
}

func (m *WindowsUpdate) GetServiceID() []string {
	if m != nil {
		return m.ServiceID
	}
	return nil
}

func (m *WindowsUpdate) GetSupportURL() []string {
	if m != nil {
		return m.SupportURL
	}
	return nil
}

func (m *WindowsUpdate) GetTitle() []string {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *WindowsUpdate) GetUpdateRevision() []int32 {
	if m != nil {
		return m.UpdateRevision
	}
	return nil
}

func (m *WindowsUpdate) GetUpdateID() []string {
	if m != nil {
		return m.UpdateID
	}
	return nil
}

func (m *WindowsUpdate) GetCategoryName() []string {
	if m != nil {
		return m.CategoryName
	}
	return nil
}

func (m *WindowsUpdate) GetCategoryType() []string {
	if m != nil {
		return m.CategoryType
	}
	return nil
}

func (m *WindowsUpdate) GetKbID() []string {
	if m != nil {
		return m.KbID
	}
	return nil
}

func (m *WindowsUpdate) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *WindowsUpdate) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *WindowsUpdate) GetWuaScanUUID() string {
	if m != nil && m.WuaScanUUID != nil {
		return *m.WuaScanUUID
	}
	return ""
}

func init() {
	proto1.RegisterType((*WindowsUpdate)(nil), "WindowsUpdate")
	proto1.RegisterEnum("WindowsUpdate_UpdateOperation", WindowsUpdate_UpdateOperation_name, WindowsUpdate_UpdateOperation_value)
	proto1.RegisterEnum("WindowsUpdate_OperationResultCode", WindowsUpdate_OperationResultCode_name, WindowsUpdate_OperationResultCode_value)
}

var fileDescriptor89 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x4f, 0x1b, 0x31,
	0x10, 0x86, 0x9b, 0x2f, 0xc8, 0x4e, 0x3e, 0x58, 0x1c, 0x84, 0x2c, 0xaa, 0xa2, 0x68, 0x4f, 0x9c,
	0x56, 0x6a, 0x0f, 0x3d, 0xb4, 0x27, 0x42, 0x3f, 0x14, 0x89, 0x52, 0x94, 0xb0, 0xe2, 0xbc, 0x78,
	0xdd, 0xd4, 0xea, 0x66, 0xc7, 0xb2, 0xbd, 0x20, 0x7a, 0xec, 0xa9, 0x7f, 0xa8, 0x7f, 0xa5, 0xbf,
	0xa7, 0x63, 0x87, 0xa2, 0x24, 0x70, 0x5a, 0xf9, 0x99, 0xd7, 0xef, 0x78, 0xe7, 0x1d, 0x18, 0x5d,
	0xab, 0xaa, 0xc0, 0x3b, 0x9b, 0xe9, 0x22, 0x77, 0x32, 0xd5, 0x06, 0x1d, 0x1e, 0xb1, 0x4b, 0xb4,
	0x6e, 0x61, 0xa4, 0xbd, 0xba, 0xd7, 0x0f, 0x2c, 0xf9, 0xdb, 0x81, 0xc1, 0x86, 0x96, 0x8d, 0x21,
	0x72, 0x6a, 0x29, 0xe7, 0x2e, 0x5f, 0x6a, 0xde, 0x18, 0x37, 0x4f, 0x5a, 0x93, 0xc1, 0xaf, 0x3f,
	0x3c, 0x40, 0xeb, 0x21, 0x7b, 0x09, 0x51, 0xbe, 0x90, 0x95, 0xfb, 0x9c, 0x4d, 0x3f, 0xf0, 0x26,
	0x29, 0xa2, 0x49, 0x97, 0x14, 0xed, 0xba, 0x56, 0x05, 0x15, 0x47, 0xa2, 0x54, 0x54, 0x3d, 0xd5,
	0xba, 0x54, 0x22, 0x77, 0x0a, 0x2b, 0x92, 0xb5, 0xc6, 0xad, 0x93, 0xc8, 0x7b, 0xfb, 0x1e, 0xe7,
	0x28, 0xf2, 0x92, 0xb7, 0x09, 0x3d, 0xf1, 0x3e, 0x86, 0x5d, 0xaf, 0xc8, 0xae, 0xce, 0x78, 0xe7,
	0xb9, 0xfa, 0x08, 0x7a, 0x85, 0xb4, 0xc2, 0x28, 0xed, 0x8d, 0xf9, 0x4e, 0xb0, 0x7d, 0x0d, 0x11,
	0x6a, 0x69, 0x42, 0x2f, 0xbe, 0x4b, 0x68, 0xf8, 0xe6, 0x38, 0xdd, 0x9c, 0xc0, 0xea, 0xf3, 0xf5,
	0xbf, 0x8a, 0xbd, 0x05, 0xa0, 0x41, 0xd4, 0xa5, 0x3b, 0xc3, 0x42, 0xf2, 0x6e, 0xb8, 0x93, 0x6c,
	0xdd, 0x79, 0x54, 0xcf, 0x1e, 0x95, 0x6c, 0x1f, 0x22, 0x2b, 0xcd, 0xad, 0x12, 0x92, 0x7e, 0x2a,
	0x0a, 0xdd, 0x19, 0x80, 0xad, 0xb5, 0x46, 0xe3, 0xb2, 0xd9, 0x39, 0x87, 0xc0, 0x06, 0xd0, 0x71,
	0xca, 0x95, 0x92, 0xf7, 0xc2, 0xf1, 0x10, 0x86, 0x75, 0xf0, 0x9c, 0xc9, 0x5b, 0x65, 0xfd, 0x2b,
	0xfb, 0xc4, 0x3b, 0x2c, 0x86, 0xee, 0x8a, 0x93, 0xd9, 0x20, 0x28, 0x0f, 0xa0, 0x4f, 0x33, 0x93,
	0x0b, 0x34, 0xf7, 0x17, 0xf9, 0x52, 0xf2, 0xe1, 0x36, 0xf5, 0xd9, 0xf1, 0xbd, 0x40, 0xfb, 0xd0,
	0xfe, 0x71, 0x43, 0x37, 0xe3, 0x70, 0x1a, 0xc2, 0x8e, 0x55, 0xe4, 0x54, 0xf0, 0xfd, 0x71, 0x23,
	0xf4, 0x0c, 0x81, 0x70, 0xe6, 0x4f, 0x6b, 0x01, 0xbd, 0x82, 0xde, 0x5d, 0x9d, 0xcf, 0x45, 0x5e,
	0x65, 0x3e, 0xbf, 0xd1, 0x66, 0x39, 0x79, 0x0f, 0x7b, 0xdb, 0xb3, 0x62, 0xf4, 0x7a, 0x9c, 0x56,
	0x14, 0x40, 0x59, 0x06, 0x12, 0x37, 0xe8, 0x45, 0x71, 0x8d, 0x59, 0xa5, 0xd6, 0x69, 0x33, 0xf9,
	0xdd, 0x80, 0xd1, 0xf3, 0x53, 0x1b, 0xa0, 0x11, 0x17, 0xe8, 0x68, 0xab, 0x8c, 0x93, 0x45, 0xfc,
	0xe2, 0x01, 0x4d, 0xab, 0x4b, 0x83, 0x7e, 0x25, 0x2d, 0x79, 0xc6, 0xd0, 0x27, 0x34, 0xaf, 0x85,
	0x90, 0xb2, 0x20, 0x51, 0x93, 0x1d, 0xc1, 0xe1, 0x3a, 0xb9, 0x56, 0xee, 0xfb, 0x47, 0x63, 0xd0,
	0xd8, 0xb8, 0x45, 0x23, 0x8e, 0xa8, 0xf6, 0x29, 0x57, 0x25, 0x49, 0xdb, 0xf4, 0xfb, 0x40, 0xc7,
	0xd3, 0x1b, 0x0c, 0xfe, 0x9d, 0xc9, 0x3b, 0x48, 0x04, 0x2e, 0xd3, 0x9f, 0xea, 0x9b, 0x93, 0x55,
	0xea, 0x33, 0x93, 0x66, 0xb5, 0xf3, 0x02, 0xcb, 0x94, 0xd6, 0xc9, 0xd2, 0x0e, 0x4f, 0x0e, 0x36,
	0x12, 0xff, 0xb2, 0xa2, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x08, 0xa3, 0xbc, 0xd4, 0x3e, 0x03,
	0x00, 0x00,
}

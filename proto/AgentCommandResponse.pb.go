// Code generated by protoc-gen-go.
// source: AgentCommandResponse.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Platform independent return code of the executed command.
type AgentCommandResponse_CommandResult int32

const (
	AgentCommandResponse_COMMAND_SUCCESS AgentCommandResponse_CommandResult = 0
	AgentCommandResponse_COMMAND_FAILURE AgentCommandResponse_CommandResult = 1
)

var AgentCommandResponse_CommandResult_name = map[int32]string{
	0: "COMMAND_SUCCESS",
	1: "COMMAND_FAILURE",
}
var AgentCommandResponse_CommandResult_value = map[string]int32{
	"COMMAND_SUCCESS": 0,
	"COMMAND_FAILURE": 1,
}

func (x AgentCommandResponse_CommandResult) Enum() *AgentCommandResponse_CommandResult {
	p := new(AgentCommandResponse_CommandResult)
	*p = x
	return p
}
func (x AgentCommandResponse_CommandResult) String() string {
	return proto1.EnumName(AgentCommandResponse_CommandResult_name, int32(x))
}
func (x *AgentCommandResponse_CommandResult) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(AgentCommandResponse_CommandResult_value, data, "AgentCommandResponse_CommandResult")
	if err != nil {
		return err
	}
	*x = AgentCommandResponse_CommandResult(value)
	return nil
}
func (AgentCommandResponse_CommandResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0}
}

// Added for FileContents command, to give reason for failure
type AgentCommandResponse_FailureCode int32

const (
	AgentCommandResponse_FAIL_NO_ERROR       AgentCommandResponse_FailureCode = 0
	AgentCommandResponse_FAIL_MISSING_FILE   AgentCommandResponse_FailureCode = 1
	AgentCommandResponse_FAIL_FILE_TOO_LARGE AgentCommandResponse_FailureCode = 2
	AgentCommandResponse_FAIL_ACCESS_DENIED  AgentCommandResponse_FailureCode = 3
	AgentCommandResponse_FAIL_FILE_OPERATION AgentCommandResponse_FailureCode = 4
)

var AgentCommandResponse_FailureCode_name = map[int32]string{
	0: "FAIL_NO_ERROR",
	1: "FAIL_MISSING_FILE",
	2: "FAIL_FILE_TOO_LARGE",
	3: "FAIL_ACCESS_DENIED",
	4: "FAIL_FILE_OPERATION",
}
var AgentCommandResponse_FailureCode_value = map[string]int32{
	"FAIL_NO_ERROR":       0,
	"FAIL_MISSING_FILE":   1,
	"FAIL_FILE_TOO_LARGE": 2,
	"FAIL_ACCESS_DENIED":  3,
	"FAIL_FILE_OPERATION": 4,
}

func (x AgentCommandResponse_FailureCode) Enum() *AgentCommandResponse_FailureCode {
	p := new(AgentCommandResponse_FailureCode)
	*p = x
	return p
}
func (x AgentCommandResponse_FailureCode) String() string {
	return proto1.EnumName(AgentCommandResponse_FailureCode_name, int32(x))
}
func (x *AgentCommandResponse_FailureCode) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(AgentCommandResponse_FailureCode_value, data, "AgentCommandResponse_FailureCode")
	if err != nil {
		return err
	}
	*x = AgentCommandResponse_FailureCode(value)
	return nil
}
func (AgentCommandResponse_FailureCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 1}
}

// Message informing the server about the outcome of a command request
type AgentCommandResponse struct {
	// The time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// The server assigns a command identifier to all command jobs
	// The agent will return the identifier in the command response
	CommandIdentifier *uint64                             `protobuf:"varint,3,req,name=commandIdentifier" json:"commandIdentifier,omitempty"`
	CommandResult     *AgentCommandResponse_CommandResult `protobuf:"varint,4,req,name=commandResult,enum=AgentCommandResponse_CommandResult" json:"commandResult,omitempty"`
	SiteId            *string                             `protobuf:"bytes,5,opt,name=siteId" json:"siteId,omitempty"`
	Uuid              *string                             `protobuf:"bytes,6,opt,name=uuid" json:"uuid,omitempty"`
	FailCode          *AgentCommandResponse_FailureCode   `protobuf:"varint,7,opt,name=failCode,enum=AgentCommandResponse_FailureCode" json:"failCode,omitempty"`
	XXX_unrecognized  []byte                              `json:"-"`
}

func (m *AgentCommandResponse) Reset()                    { *m = AgentCommandResponse{} }
func (m *AgentCommandResponse) String() string            { return proto1.CompactTextString(m) }
func (*AgentCommandResponse) ProtoMessage()               {}
func (*AgentCommandResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AgentCommandResponse) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *AgentCommandResponse) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *AgentCommandResponse) GetCommandIdentifier() uint64 {
	if m != nil && m.CommandIdentifier != nil {
		return *m.CommandIdentifier
	}
	return 0
}

func (m *AgentCommandResponse) GetCommandResult() AgentCommandResponse_CommandResult {
	if m != nil && m.CommandResult != nil {
		return *m.CommandResult
	}
	return AgentCommandResponse_COMMAND_SUCCESS
}

func (m *AgentCommandResponse) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *AgentCommandResponse) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *AgentCommandResponse) GetFailCode() AgentCommandResponse_FailureCode {
	if m != nil && m.FailCode != nil {
		return *m.FailCode
	}
	return AgentCommandResponse_FAIL_NO_ERROR
}

func init() {
	proto1.RegisterType((*AgentCommandResponse)(nil), "AgentCommandResponse")
	proto1.RegisterEnum("AgentCommandResponse_CommandResult", AgentCommandResponse_CommandResult_name, AgentCommandResponse_CommandResult_value)
	proto1.RegisterEnum("AgentCommandResponse_FailureCode", AgentCommandResponse_FailureCode_name, AgentCommandResponse_FailureCode_value)
}

var fileDescriptor2 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0xaf, 0x93, 0x40,
	0x14, 0xc5, 0xa5, 0xe0, 0xf3, 0x71, 0x0d, 0x95, 0xce, 0xf3, 0xcf, 0xd8, 0x6e, 0x2a, 0x6e, 0xba,
	0x62, 0x51, 0x57, 0xba, 0xe3, 0x5f, 0x9b, 0x49, 0x0a, 0x34, 0xd0, 0xae, 0x09, 0x29, 0xd3, 0x86,
	0xa4, 0xfc, 0x09, 0x33, 0x98, 0xe8, 0x4e, 0xbf, 0x93, 0xdf, 0xc1, 0x8f, 0xe5, 0x40, 0xcd, 0x0b,
	0x4d, 0x58, 0xce, 0x39, 0xbf, 0x73, 0x0f, 0xdc, 0x0b, 0x73, 0xeb, 0x42, 0x4b, 0xee, 0x54, 0x45,
	0x91, 0x96, 0x59, 0x44, 0x59, 0x5d, 0x95, 0x8c, 0x9a, 0x75, 0x53, 0xf1, 0x6a, 0x8e, 0xf6, 0x15,
	0xe3, 0x97, 0x86, 0xb2, 0xc3, 0x8f, 0xfa, 0xbf, 0x66, 0xfc, 0x95, 0xe1, 0xed, 0x58, 0x04, 0x2d,
	0x41, 0xe5, 0x79, 0x41, 0x63, 0x9e, 0x16, 0x35, 0x96, 0x96, 0x93, 0x95, 0x6c, 0x6b, 0xbf, 0xff,
	0xe0, 0x5e, 0x64, 0x9d, 0x88, 0x16, 0xa0, 0xa6, 0x5d, 0x72, 0x7b, 0x24, 0x2e, 0x9e, 0x08, 0x42,
	0xb5, 0x1f, 0x05, 0xa1, 0xb4, 0x6d, 0x9e, 0xa1, 0x8f, 0x30, 0x3b, 0xdd, 0x26, 0x92, 0x4c, 0x30,
	0xf9, 0x39, 0xa7, 0x0d, 0x96, 0x05, 0xa4, 0xa0, 0x6f, 0xa0, 0x9d, 0x9e, 0xcb, 0xda, 0x2b, 0xc7,
	0x8a, 0x90, 0xa7, 0xeb, 0xcf, 0xe6, 0xe8, 0xa7, 0x3b, 0x43, 0x14, 0x4d, 0xe1, 0x81, 0xe5, 0x9c,
	0x92, 0x0c, 0xbf, 0x5c, 0x4a, 0x2b, 0x15, 0xbd, 0x87, 0xbe, 0x0e, 0x3f, 0x74, 0xaf, 0x41, 0xfd,
	0x17, 0x78, 0x3c, 0xa7, 0xf9, 0xd5, 0xa9, 0x32, 0x8a, 0x5f, 0x09, 0x6f, 0xba, 0xfe, 0x34, 0x3e,
	0x7e, 0x23, 0xa8, 0xb6, 0xa1, 0x1d, 0x68, 0x7c, 0x05, 0xed, 0xbe, 0xed, 0x09, 0xde, 0x38, 0xa1,
	0xef, 0x5b, 0x81, 0x9b, 0xc4, 0x47, 0xc7, 0xf1, 0xe2, 0x58, 0x7f, 0x31, 0x14, 0x37, 0x16, 0xd9,
	0x1d, 0x23, 0x4f, 0x97, 0x8c, 0x5f, 0x12, 0xbc, 0x1e, 0x8c, 0x42, 0x33, 0xd0, 0x3a, 0x33, 0x09,
	0xc2, 0xc4, 0x8b, 0xa2, 0x30, 0x12, 0xb9, 0x77, 0x30, 0xeb, 0x25, 0x9f, 0xc4, 0x31, 0x09, 0xb6,
	0xc9, 0x86, 0xec, 0x44, 0x12, 0x7d, 0x80, 0xa7, 0x5e, 0xee, 0x9e, 0xc9, 0x21, 0x0c, 0x93, 0x9d,
	0x15, 0x6d, 0x3d, 0x7d, 0x22, 0x7e, 0x0d, 0xf5, 0x86, 0xd5, 0x17, 0x27, 0xae, 0x17, 0x10, 0xcf,
	0xd5, 0xe5, 0xfb, 0x40, 0xb8, 0xf7, 0x22, 0xeb, 0x40, 0xc2, 0x40, 0x57, 0x6c, 0x0b, 0x0c, 0xb1,
	0x57, 0xf3, 0x67, 0x7e, 0xe6, 0xb4, 0x34, 0x19, 0x6d, 0xbe, 0xd3, 0xe6, 0x76, 0xe5, 0x53, 0x75,
	0x35, 0xc5, 0xd5, 0x98, 0x38, 0x97, 0xbd, 0x18, 0x5b, 0x83, 0x7f, 0x33, 0xff, 0x05, 0x00, 0x00,
	0xff, 0xff, 0xff, 0xf1, 0x6a, 0x01, 0x3e, 0x02, 0x00, 0x00,
}

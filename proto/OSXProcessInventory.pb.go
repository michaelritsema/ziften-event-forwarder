// Code generated by protoc-gen-go.
// source: OSXProcessInventory.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OSXProcessInventory struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent.(e.g. 58fdc716-1f2a-3819-aaf0-972f4317e83b) This field is used by the server to distinguish agents.
	AgentGuid *string `protobuf:"bytes,2,req,name=agentGuid" json:"agentGuid,omitempty"`
	// process identifier (e.g. 13)
	Pid *int32 `protobuf:"varint,3,req,name=pid" json:"pid,omitempty"`
	// path to the process binary (e.g. /usr/libexec/configd)
	Fullpath *string `protobuf:"bytes,4,req,name=fullpath" json:"fullpath,omitempty"`
	// name of process (e.g. configd)
	RunningProcessName *string `protobuf:"bytes,5,req,name=runningProcessName" json:"runningProcessName,omitempty"`
	// virtual memory size used by process (e.g. 2534191104)
	VirtualMem *int64 `protobuf:"varint,6,req,name=virtualMem" json:"virtualMem,omitempty"`
	// physical memory size used by process (e.g. 2534191104)
	PhysicalMem *int64 `protobuf:"varint,7,req,name=physicalMem" json:"physicalMem,omitempty"`
	// total user time used by process (e.g. 805255811)
	UserTime *int64 `protobuf:"varint,8,req,name=userTime" json:"userTime,omitempty"`
	// system time (e.g. 1169795479)
	SystemTime *int64 `protobuf:"varint,9,req,name=systemTime" json:"systemTime,omitempty"`
	// amount of threads (e.g. 7)
	TotalThreads *int32 `protobuf:"varint,10,req,name=totalThreads" json:"totalThreads,omitempty"`
	// amount of threads launched (e.g. 3)
	RunningThreads *int32 `protobuf:"varint,11,req,name=runningThreads" json:"runningThreads,omitempty"`
	// priority of process (e.g. 2)
	Priority *int32 `protobuf:"varint,12,req,name=priority" json:"priority,omitempty"`
	// user's name (e.g. root)
	UserName         *string `protobuf:"bytes,13,opt,name=userName" json:"userName,omitempty"`
	SiteId           *string `protobuf:"bytes,14,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string `protobuf:"bytes,15,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OSXProcessInventory) Reset()                    { *m = OSXProcessInventory{} }
func (m *OSXProcessInventory) String() string            { return proto1.CompactTextString(m) }
func (*OSXProcessInventory) ProtoMessage()               {}
func (*OSXProcessInventory) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{0} }

func (m *OSXProcessInventory) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *OSXProcessInventory) GetAgentGuid() string {
	if m != nil && m.AgentGuid != nil {
		return *m.AgentGuid
	}
	return ""
}

func (m *OSXProcessInventory) GetPid() int32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *OSXProcessInventory) GetFullpath() string {
	if m != nil && m.Fullpath != nil {
		return *m.Fullpath
	}
	return ""
}

func (m *OSXProcessInventory) GetRunningProcessName() string {
	if m != nil && m.RunningProcessName != nil {
		return *m.RunningProcessName
	}
	return ""
}

func (m *OSXProcessInventory) GetVirtualMem() int64 {
	if m != nil && m.VirtualMem != nil {
		return *m.VirtualMem
	}
	return 0
}

func (m *OSXProcessInventory) GetPhysicalMem() int64 {
	if m != nil && m.PhysicalMem != nil {
		return *m.PhysicalMem
	}
	return 0
}

func (m *OSXProcessInventory) GetUserTime() int64 {
	if m != nil && m.UserTime != nil {
		return *m.UserTime
	}
	return 0
}

func (m *OSXProcessInventory) GetSystemTime() int64 {
	if m != nil && m.SystemTime != nil {
		return *m.SystemTime
	}
	return 0
}

func (m *OSXProcessInventory) GetTotalThreads() int32 {
	if m != nil && m.TotalThreads != nil {
		return *m.TotalThreads
	}
	return 0
}

func (m *OSXProcessInventory) GetRunningThreads() int32 {
	if m != nil && m.RunningThreads != nil {
		return *m.RunningThreads
	}
	return 0
}

func (m *OSXProcessInventory) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *OSXProcessInventory) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *OSXProcessInventory) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *OSXProcessInventory) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*OSXProcessInventory)(nil), "OSXProcessInventory")
}

var fileDescriptor51 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0x4d, 0x6e, 0xc2, 0x30,
	0x10, 0x85, 0xc5, 0x6f, 0xc9, 0xf0, 0xd3, 0xca, 0x54, 0xc8, 0xa5, 0x1b, 0xc4, 0xaa, 0xab, 0x9c,
	0xa1, 0xca, 0xa6, 0x62, 0x41, 0x8b, 0x04, 0x8b, 0x6e, 0xad, 0x30, 0x80, 0xa5, 0x24, 0xb6, 0xec,
	0x09, 0x52, 0xba, 0xec, 0x9d, 0x7a, 0x97, 0x1e, 0xa7, 0x13, 0x07, 0xd4, 0x0d, 0xcb, 0xf9, 0xfc,
	0x66, 0xde, 0xf3, 0x83, 0xa7, 0x8f, 0xed, 0xe7, 0xc6, 0x99, 0x14, 0xbd, 0x5f, 0x15, 0x67, 0x2c,
	0xc8, 0xb8, 0x2a, 0xb6, 0xce, 0x90, 0x99, 0x8b, 0x8d, 0xf1, 0x74, 0x74, 0xe8, 0x77, 0x95, 0xc5,
	0x86, 0x2d, 0x7f, 0xdb, 0x30, 0xbd, 0xb1, 0x21, 0x16, 0x10, 0x91, 0xce, 0x71, 0x4b, 0x2a, 0xb7,
	0xb2, 0xb5, 0x68, 0xbf, 0x74, 0x92, 0xf1, 0xf7, 0x8f, 0x0c, 0xd0, 0xd7, 0x50, 0x3c, 0x43, 0xa4,
	0x8e, 0xac, 0x7e, 0x2b, 0xf5, 0x5e, 0xb6, 0x59, 0x11, 0x25, 0x03, 0x56, 0x74, 0x4b, 0x9e, 0xc5,
	0x10, 0x3a, 0x96, 0x71, 0x87, 0x71, 0x4f, 0x3c, 0xc0, 0xe0, 0x50, 0x66, 0x99, 0x55, 0x74, 0x92,
	0xdd, 0x5a, 0x28, 0xe6, 0x20, 0x5c, 0x59, 0x14, 0xba, 0x38, 0x5e, 0x8c, 0xdf, 0x55, 0x8e, 0xb2,
	0x17, 0xde, 0x04, 0xc0, 0x59, 0x3b, 0x2a, 0x55, 0xb6, 0xc6, 0x5c, 0xf6, 0x6b, 0x6b, 0x31, 0x85,
	0xa1, 0x3d, 0x55, 0x5e, 0xa7, 0x0d, 0xbc, 0x0b, 0x90, 0xcf, 0x96, 0x1e, 0xdd, 0x8e, 0x13, 0xc9,
	0x41, 0x20, 0xbc, 0xea, 0x2b, 0x4f, 0x98, 0x07, 0x16, 0x05, 0xf6, 0x08, 0x23, 0x32, 0xa4, 0xb2,
	0xdd, 0xc9, 0xa1, 0xda, 0x7b, 0x09, 0x21, 0xd2, 0x0c, 0x26, 0x97, 0x00, 0x57, 0x3e, 0xbc, 0x46,
	0xb5, 0x4e, 0x1b, 0xa7, 0xa9, 0x92, 0xa3, 0x2b, 0xa9, 0x5d, 0x42, 0xc0, 0xf1, 0xa2, 0xc5, 0x01,
	0x27, 0xd0, 0xf7, 0x9a, 0x70, 0xb5, 0x97, 0x93, 0x30, 0xcf, 0x20, 0xfc, 0x59, 0xde, 0xd7, 0xd3,
	0x7f, 0x07, 0xc9, 0x2b, 0x2c, 0x53, 0x93, 0xc7, 0x5f, 0xfa, 0x40, 0x58, 0xc4, 0x7c, 0xe3, 0x8c,
	0xae, 0x69, 0x3d, 0x35, 0x59, 0xcc, 0x35, 0x7a, 0xee, 0x2f, 0x99, 0xdf, 0x68, 0x7f, 0xdd, 0xbc,
	0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x7f, 0x90, 0x7b, 0xcc, 0x01, 0x00, 0x00,
}

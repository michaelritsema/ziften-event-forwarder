// Code generated by protoc-gen-go.
// source: InterferingProcess.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Notify server about a background application that uses a lot of CPU and interferes the performance of the foreground application
// The background application is reported only when interferes while a user is active on the computer.
type InterferingProcess struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// The fully qualified filename of the interfering app binary: i.e. 'c:\windows\system32\binary.exe'
	ImageFilepath *string `protobuf:"bytes,3,req,name=imageFilepath" json:"imageFilepath,omitempty"`
	// The number of intervals that this application has been found interfering
	// The interval length is defined by the resource usage polling interval and it is 5 seconds by default
	NumberIntervals *uint32 `protobuf:"varint,4,req,name=numberIntervals" json:"numberIntervals,omitempty"`
	// The average CPU usage in the intervals
	AvgCPUUsage      *float64 `protobuf:"fixed64,5,req,name=avgCPUUsage" json:"avgCPUUsage,omitempty"`
	ImageFileMD5     *string  `protobuf:"bytes,6,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	AccountName      *string  `protobuf:"bytes,7,opt,name=accountName" json:"accountName,omitempty"`
	DomainName       *string  `protobuf:"bytes,8,opt,name=domainName" json:"domainName,omitempty"`
	SiteId           *string  `protobuf:"bytes,9,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string  `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *InterferingProcess) Reset()                    { *m = InterferingProcess{} }
func (m *InterferingProcess) String() string            { return proto1.CompactTextString(m) }
func (*InterferingProcess) ProtoMessage()               {}
func (*InterferingProcess) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

func (m *InterferingProcess) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *InterferingProcess) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *InterferingProcess) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *InterferingProcess) GetNumberIntervals() uint32 {
	if m != nil && m.NumberIntervals != nil {
		return *m.NumberIntervals
	}
	return 0
}

func (m *InterferingProcess) GetAvgCPUUsage() float64 {
	if m != nil && m.AvgCPUUsage != nil {
		return *m.AvgCPUUsage
	}
	return 0
}

func (m *InterferingProcess) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *InterferingProcess) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *InterferingProcess) GetDomainName() string {
	if m != nil && m.DomainName != nil {
		return *m.DomainName
	}
	return ""
}

func (m *InterferingProcess) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *InterferingProcess) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*InterferingProcess)(nil), "InterferingProcess")
}

var fileDescriptor29 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4e, 0xf3, 0x30,
	0x10, 0xc4, 0x95, 0xb6, 0x5f, 0xbf, 0x66, 0xa1, 0x20, 0x99, 0x7f, 0x0b, 0x5c, 0xa2, 0x9e, 0x38,
	0xe5, 0xc6, 0x19, 0x29, 0x54, 0xa0, 0x1c, 0x8a, 0x22, 0x41, 0x1e, 0xc0, 0x24, 0xdb, 0x60, 0x29,
	0xb6, 0x23, 0xdb, 0xa9, 0x04, 0x47, 0xde, 0x89, 0xe7, 0x03, 0xc7, 0x91, 0xe0, 0xd0, 0xe3, 0xfe,
	0x66, 0x76, 0x3d, 0x1e, 0xc0, 0x5c, 0x39, 0x32, 0x5b, 0x32, 0x42, 0x35, 0x85, 0xd1, 0x15, 0x59,
	0x9b, 0x76, 0x46, 0x3b, 0x7d, 0xc5, 0x0a, 0x6d, 0x5d, 0x63, 0xc8, 0xbe, 0xbc, 0x77, 0x34, 0xb2,
	0xd5, 0x77, 0x04, 0x6c, 0x7f, 0x81, 0x25, 0x10, 0x3b, 0x21, 0xe9, 0xd9, 0x71, 0xd9, 0x61, 0x94,
	0x4c, 0x6e, 0xa6, 0xd9, 0xf2, 0xf3, 0x0b, 0x03, 0xb4, 0x03, 0x64, 0xd7, 0x10, 0xf3, 0x86, 0x94,
	0x7b, 0x2c, 0xf3, 0x35, 0x4e, 0xbc, 0x23, 0xce, 0x16, 0xde, 0x31, 0xeb, 0x7b, 0x51, 0xb3, 0x33,
	0x58, 0x0a, 0xe9, 0xe5, 0x07, 0xd1, 0x52, 0xc7, 0xdd, 0x1b, 0x4e, 0x07, 0x03, 0xbb, 0x80, 0x63,
	0xd5, 0xcb, 0x57, 0x32, 0xe1, 0xc5, 0x1d, 0x6f, 0x2d, 0xce, 0xbc, 0xb0, 0x64, 0x27, 0x70, 0xc0,
	0x77, 0xcd, 0x7d, 0x51, 0x96, 0xd6, 0x6f, 0xe1, 0x3f, 0x0f, 0x23, 0x76, 0x0a, 0x87, 0xbf, 0x47,
	0x36, 0xeb, 0x5b, 0x9c, 0x27, 0x91, 0xbf, 0x31, 0x58, 0xab, 0x4a, 0xf7, 0xca, 0x3d, 0x71, 0x49,
	0xf8, 0x3f, 0x40, 0x06, 0x50, 0x6b, 0xc9, 0x85, 0x0a, 0x6c, 0x11, 0xd8, 0x11, 0xcc, 0xad, 0x70,
	0x94, 0xd7, 0x18, 0x87, 0xf9, 0x1c, 0x42, 0x36, 0x84, 0x61, 0xfa, 0xcb, 0x9a, 0xdd, 0xc1, 0xaa,
	0xd2, 0x32, 0xfd, 0x10, 0x5b, 0x47, 0x2a, 0xb5, 0x3e, 0x17, 0x99, 0xb1, 0x9c, 0x4a, 0xb7, 0xa9,
	0xff, 0xee, 0x10, 0x29, 0xbb, 0xdc, 0x2f, 0x69, 0x33, 0x4a, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xf3, 0x1f, 0x16, 0x7f, 0x71, 0x01, 0x00, 0x00,
}

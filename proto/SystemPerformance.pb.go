// Code generated by protoc-gen-go.
// source: SystemPerformance.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SystemPerformance struct {
	// The UTC time (as known to the client computer) when the agent status message was generated
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID        *string  `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	UsedMemory       *int64   `protobuf:"varint,3,req,name=usedMemory" json:"usedMemory,omitempty"`
	FreeMemory       *int64   `protobuf:"varint,4,req,name=freeMemory" json:"freeMemory,omitempty"`
	ActualUsedMemory *int64   `protobuf:"varint,5,req,name=actualUsedMemory" json:"actualUsedMemory,omitempty"`
	ActualFreeMemory *int64   `protobuf:"varint,6,req,name=actualFreeMemory" json:"actualFreeMemory,omitempty"`
	UserCPU          *float64 `protobuf:"fixed64,7,req,name=userCPU" json:"userCPU,omitempty"`
	SysCPU           *float64 `protobuf:"fixed64,8,req,name=sysCPU" json:"sysCPU,omitempty"`
	NiceCPU          *float64 `protobuf:"fixed64,9,req,name=niceCPU" json:"niceCPU,omitempty"`
	IdleCPU          *float64 `protobuf:"fixed64,10,req,name=idleCPU" json:"idleCPU,omitempty"`
	WaitCPU          *float64 `protobuf:"fixed64,11,req,name=waitCPU" json:"waitCPU,omitempty"`
	IrqCPU           *float64 `protobuf:"fixed64,12,req,name=irqCPU" json:"irqCPU,omitempty"`
	CombinedCPU      *float64 `protobuf:"fixed64,13,req,name=combinedCPU" json:"combinedCPU,omitempty"`
	FileSystem       []string `protobuf:"bytes,14,rep,name=fileSystem" json:"fileSystem,omitempty"`
	SizeFileSystem   []int64  `protobuf:"varint,15,rep,name=sizeFileSystem" json:"sizeFileSystem,omitempty"`
	UsedFileSystem   []int64  `protobuf:"varint,16,rep,name=usedFileSystem" json:"usedFileSystem,omitempty"`
	AvailFileSystem  []int64  `protobuf:"varint,17,rep,name=availFileSystem" json:"availFileSystem,omitempty"`
	MountFileSystem  []string `protobuf:"bytes,18,rep,name=mountFileSystem" json:"mountFileSystem,omitempty"`
	TypeFileSystem   []string `protobuf:"bytes,19,rep,name=typeFileSystem" json:"typeFileSystem,omitempty"`
	// Used to correlate the repeated fields
	FileSystemGUID   []string `protobuf:"bytes,20,rep,name=fileSystemGUID" json:"fileSystemGUID,omitempty"`
	SiteId           *string  `protobuf:"bytes,21,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string  `protobuf:"bytes,22,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SystemPerformance) Reset()                    { *m = SystemPerformance{} }
func (m *SystemPerformance) String() string            { return proto1.CompactTextString(m) }
func (*SystemPerformance) ProtoMessage()               {}
func (*SystemPerformance) Descriptor() ([]byte, []int) { return fileDescriptor84, []int{0} }

func (m *SystemPerformance) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *SystemPerformance) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *SystemPerformance) GetUsedMemory() int64 {
	if m != nil && m.UsedMemory != nil {
		return *m.UsedMemory
	}
	return 0
}

func (m *SystemPerformance) GetFreeMemory() int64 {
	if m != nil && m.FreeMemory != nil {
		return *m.FreeMemory
	}
	return 0
}

func (m *SystemPerformance) GetActualUsedMemory() int64 {
	if m != nil && m.ActualUsedMemory != nil {
		return *m.ActualUsedMemory
	}
	return 0
}

func (m *SystemPerformance) GetActualFreeMemory() int64 {
	if m != nil && m.ActualFreeMemory != nil {
		return *m.ActualFreeMemory
	}
	return 0
}

func (m *SystemPerformance) GetUserCPU() float64 {
	if m != nil && m.UserCPU != nil {
		return *m.UserCPU
	}
	return 0
}

func (m *SystemPerformance) GetSysCPU() float64 {
	if m != nil && m.SysCPU != nil {
		return *m.SysCPU
	}
	return 0
}

func (m *SystemPerformance) GetNiceCPU() float64 {
	if m != nil && m.NiceCPU != nil {
		return *m.NiceCPU
	}
	return 0
}

func (m *SystemPerformance) GetIdleCPU() float64 {
	if m != nil && m.IdleCPU != nil {
		return *m.IdleCPU
	}
	return 0
}

func (m *SystemPerformance) GetWaitCPU() float64 {
	if m != nil && m.WaitCPU != nil {
		return *m.WaitCPU
	}
	return 0
}

func (m *SystemPerformance) GetIrqCPU() float64 {
	if m != nil && m.IrqCPU != nil {
		return *m.IrqCPU
	}
	return 0
}

func (m *SystemPerformance) GetCombinedCPU() float64 {
	if m != nil && m.CombinedCPU != nil {
		return *m.CombinedCPU
	}
	return 0
}

func (m *SystemPerformance) GetFileSystem() []string {
	if m != nil {
		return m.FileSystem
	}
	return nil
}

func (m *SystemPerformance) GetSizeFileSystem() []int64 {
	if m != nil {
		return m.SizeFileSystem
	}
	return nil
}

func (m *SystemPerformance) GetUsedFileSystem() []int64 {
	if m != nil {
		return m.UsedFileSystem
	}
	return nil
}

func (m *SystemPerformance) GetAvailFileSystem() []int64 {
	if m != nil {
		return m.AvailFileSystem
	}
	return nil
}

func (m *SystemPerformance) GetMountFileSystem() []string {
	if m != nil {
		return m.MountFileSystem
	}
	return nil
}

func (m *SystemPerformance) GetTypeFileSystem() []string {
	if m != nil {
		return m.TypeFileSystem
	}
	return nil
}

func (m *SystemPerformance) GetFileSystemGUID() []string {
	if m != nil {
		return m.FileSystemGUID
	}
	return nil
}

func (m *SystemPerformance) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *SystemPerformance) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*SystemPerformance)(nil), "SystemPerformance")
}

var fileDescriptor84 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0xd2, 0xc1, 0x8e, 0xda, 0x30,
	0x10, 0x00, 0x50, 0x41, 0x28, 0x90, 0xa1, 0x04, 0x30, 0x2d, 0x58, 0xed, 0x25, 0xe2, 0xc4, 0x29,
	0x9f, 0xd0, 0x43, 0x5a, 0x51, 0x71, 0x40, 0x42, 0xa2, 0x7c, 0x80, 0x9b, 0x0c, 0xc8, 0x52, 0x12,
	0x53, 0xdb, 0xa1, 0x0a, 0xc7, 0xfd, 0xa7, 0xfd, 0xbe, 0x5d, 0xdb, 0x10, 0x25, 0x2b, 0x8e, 0xf3,
	0x66, 0x3c, 0x89, 0x67, 0x0c, 0xcb, 0x43, 0xa5, 0x34, 0xe6, 0x7b, 0x94, 0x27, 0x21, 0x73, 0x56,
	0x24, 0x18, 0x5d, 0xa4, 0xd0, 0xe2, 0x1b, 0xd9, 0x0b, 0xa5, 0xcf, 0x12, 0xd5, 0x9f, 0xea, 0xf2,
	0xb0, 0xd5, 0x9b, 0x07, 0xb3, 0xa7, 0x7a, 0x12, 0x82, 0xaf, 0x79, 0x8e, 0x07, 0xcd, 0xf2, 0x0b,
	0xed, 0x84, 0xdd, 0xb5, 0x17, 0x8f, 0x5f, 0x5e, 0xa9, 0x43, 0x65, 0x91, 0x7c, 0x07, 0x9f, 0x9d,
	0xb1, 0xd0, 0xbf, 0x8f, 0xdb, 0x5f, 0xb4, 0x6b, 0x2a, 0xfc, 0x78, 0x68, 0x2a, 0x7a, 0x65, 0xc9,
	0x53, 0x42, 0x00, 0x4a, 0x85, 0xe9, 0x0e, 0x73, 0x21, 0x2b, 0xea, 0xd9, 0xf3, 0xd6, 0x4e, 0x12,
	0xf1, 0x61, 0x3d, 0x67, 0x14, 0xa6, 0x2c, 0xd1, 0x25, 0xcb, 0x8e, 0x4d, 0xf5, 0xa7, 0x8f, 0x99,
	0x4d, 0x73, 0xa6, 0xef, 0x32, 0x13, 0x18, 0x98, 0xde, 0xf2, 0xe7, 0xfe, 0x48, 0x07, 0x06, 0x3a,
	0x24, 0x80, 0xbe, 0xaa, 0x94, 0x8d, 0x87, 0x2e, 0x36, 0x05, 0x05, 0x4f, 0xd0, 0x82, 0x5f, 0x03,
	0x4f, 0x33, 0x07, 0x50, 0xc3, 0x7f, 0xc6, 0xb5, 0x85, 0x51, 0xdd, 0x82, 0xcb, 0x7f, 0x36, 0xfe,
	0xec, 0xe2, 0x39, 0x8c, 0x12, 0x91, 0xff, 0xe5, 0x05, 0xa6, 0x16, 0xc7, 0x0e, 0xed, 0x05, 0x78,
	0x86, 0xf7, 0x61, 0xd1, 0x20, 0xf4, 0xd6, 0x3e, 0x59, 0x40, 0xa0, 0xf8, 0x0d, 0x37, 0x8d, 0x4f,
	0x8c, 0x7b, 0xd6, 0xed, 0x00, 0x5a, 0x3e, 0x75, 0xbe, 0x84, 0x09, 0xbb, 0x32, 0x9e, 0xb5, 0x12,
	0xb3, 0x3a, 0x91, 0x8b, 0xb2, 0xd0, 0xad, 0x04, 0xa9, 0xbf, 0xa0, 0xcd, 0xb6, 0x5a, 0x3e, 0x77,
	0x1e, 0x42, 0xd0, 0xfc, 0x8d, 0x5b, 0xc2, 0x17, 0xeb, 0xad, 0x25, 0xd8, 0xb9, 0x70, 0x8d, 0xdb,
	0x94, 0x7e, 0x0d, 0x3b, 0xae, 0x93, 0x73, 0xba, 0xb0, 0x51, 0x53, 0x17, 0xff, 0x80, 0x95, 0xb9,
	0x6c, 0x74, 0xe3, 0x27, 0x8d, 0x45, 0x64, 0x46, 0x7b, 0x45, 0x79, 0x7f, 0x1c, 0x89, 0xc8, 0x22,
	0xb3, 0x6f, 0x65, 0x16, 0x1d, 0xd3, 0xa7, 0x47, 0xb2, 0xbb, 0x67, 0xde, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x60, 0x0b, 0xf5, 0x75, 0x6f, 0x02, 0x00, 0x00,
}

// Code generated by protoc-gen-go.
// source: Services.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Message reporting information about a Win32 Service installed on the client machine
type Services struct {
	// The time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// Service Attribute - Name of the Service
	Name *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	// Service Attribute - General description for the service
	DisplayName *string `protobuf:"bytes,4,req,name=displayName" json:"displayName,omitempty"`
	// Service Attribute - The fully qualified path to the service binary file.
	// The path can also include arguments for an auto-start service. These arguments are passed to the service entry point (typically the main function).
	BinaryPathName *string `protobuf:"bytes,5,req,name=binaryPathName" json:"binaryPathName,omitempty"`
	// The fully qualified filename of the binary: i.e. 'c:\windows\system32\binary.exe'
	ImageFilepath *string `protobuf:"bytes,6,req,name=imageFilepath" json:"imageFilepath,omitempty"`
	// Service Attribute - The type of service. This member can be one of the following values.
	// Name							Value		Meaning
	// --------------------------	----------	-----------
	// SERVICE_FILE_SYSTEM_DRIVER	0x00000002	File system driver service.
	// SERVICE_KERNEL_DRIVER		0x00000001	Driver service.
	// SERVICE_WIN32_OWN_PROCESS	0x00000010	Service that runs in its own process.
	// SERVICE_WIN32_SHARE_PROCESS	0x00000020	Service that can run with other services in a process
	// SERVICE_INTERACTIVE_PROCESS	0x00000100	The service can interact with the desktop.  For more information, see Interactive Services.
	ServiceType *int32 `protobuf:"varint,7,req,name=serviceType" json:"serviceType,omitempty"`
	// Service Attribute - When the service is to be started
	// Name							Value		Meaning
	// --------------------------	----------	-----------
	// SERVICE_AUTO_START			0x00000002	A service started automatically by the service control manager during system startup.
	// SERVICE_BOOT_START			0x00000000	A device driver started by the system loader. This value is valid only for driver services.
	// SERVICE_DEMAND_START			0x00000003	A service started by the service control manager when a process calls the StartService function.
	// SERVICE_DISABLED				0x00000004	A service that cannot be started. Attempts to start the service result in the error code ERROR_SERVICE_DISABLED.
	// SERVICE_SYSTEM_START			0x00000001	A device driver started by the IoInitSystem function. This value is valid only for driver services.
	StartType *int32 `protobuf:"varint,8,req,name=startType" json:"startType,omitempty"`
	// MD5 for imageFilepath
	ImageFileMD5 *string `protobuf:"bytes,9,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	SiteId       *string `protobuf:"bytes,10,opt,name=siteId" json:"siteId,omitempty"`
	Uuid         *string `protobuf:"bytes,11,opt,name=uuid" json:"uuid,omitempty"`
	// Tie this to the actual system boot (uses UUID)
	BootAnalysisGUID *string `protobuf:"bytes,12,opt,name=bootAnalysisGUID" json:"bootAnalysisGUID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Services) Reset()                    { *m = Services{} }
func (m *Services) String() string            { return proto1.CompactTextString(m) }
func (*Services) ProtoMessage()               {}
func (*Services) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{0} }

func (m *Services) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *Services) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *Services) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Services) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Services) GetBinaryPathName() string {
	if m != nil && m.BinaryPathName != nil {
		return *m.BinaryPathName
	}
	return ""
}

func (m *Services) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *Services) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *Services) GetStartType() int32 {
	if m != nil && m.StartType != nil {
		return *m.StartType
	}
	return 0
}

func (m *Services) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *Services) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *Services) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *Services) GetBootAnalysisGUID() string {
	if m != nil && m.BootAnalysisGUID != nil {
		return *m.BootAnalysisGUID
	}
	return ""
}

func init() {
	proto1.RegisterType((*Services)(nil), "Services")
}

var fileDescriptor78 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xd1, 0x4e, 0x83, 0x30,
	0x14, 0x86, 0x33, 0xc6, 0x26, 0x9c, 0x31, 0xd4, 0xaa, 0x4b, 0xa3, 0x37, 0x84, 0x2b, 0xaf, 0xb8,
	0xdb, 0x03, 0x48, 0x16, 0xcd, 0x2e, 0x66, 0x96, 0x4c, 0x1f, 0xa0, 0x83, 0xe3, 0x6c, 0x02, 0x94,
	0xb4, 0x9d, 0x09, 0x5e, 0xfa, 0x2e, 0x3e, 0x82, 0xef, 0x67, 0x5b, 0x82, 0x71, 0x97, 0xe7, 0xe3,
	0x3f, 0x87, 0xaf, 0x3f, 0xc4, 0x3b, 0x94, 0x1f, 0xbc, 0x40, 0x95, 0xb5, 0x52, 0x68, 0x71, 0x4b,
	0xb6, 0x42, 0xe9, 0x83, 0x44, 0xf5, 0xd2, 0xb5, 0xd8, 0xb3, 0xf4, 0xdb, 0x83, 0x60, 0x88, 0x91,
	0x04, 0x42, 0xcd, 0x6b, 0xdc, 0x69, 0x56, 0xb7, 0x74, 0x94, 0x78, 0xf7, 0xe3, 0x7c, 0xfe, 0xf5,
	0x43, 0x1d, 0x54, 0x16, 0x92, 0x3b, 0x08, 0xd9, 0x01, 0x1b, 0xfd, 0xf4, 0xba, 0x5e, 0x51, 0xcf,
	0x24, 0xc2, 0x3c, 0x30, 0x09, 0xff, 0x78, 0xe4, 0x25, 0x89, 0xc0, 0x6f, 0x58, 0x8d, 0x74, 0x6c,
	0x39, 0xb9, 0x82, 0x59, 0xc9, 0x55, 0x5b, 0xb1, 0xee, 0xd9, 0x42, 0xdf, 0xc1, 0x05, 0xc4, 0x7b,
	0xde, 0x30, 0xd9, 0x6d, 0x99, 0x7e, 0x77, 0x7c, 0xe2, 0xf8, 0x0d, 0xcc, 0x79, 0x6d, 0x2e, 0x3f,
	0xf2, 0x0a, 0x5b, 0xf3, 0x89, 0x4e, 0x87, 0x1b, 0xaa, 0x97, 0xb3, 0xca, 0xf4, 0xcc, 0xc0, 0x09,
	0xb9, 0x84, 0xd0, 0xc8, 0x48, 0xed, 0x50, 0xe0, 0xd0, 0x35, 0x44, 0x7f, 0xeb, 0x9b, 0xd5, 0x92,
	0x86, 0xc9, 0xc8, 0x6c, 0xc7, 0x30, 0x55, 0x5c, 0xe3, 0xba, 0xa4, 0xe0, 0xe6, 0x05, 0x38, 0x4f,
	0x3a, 0xb3, 0xd3, 0x3f, 0xef, 0x14, 0x2e, 0xf6, 0x42, 0xe8, 0x87, 0x86, 0x55, 0x9d, 0xe2, 0xca,
	0xbd, 0x2d, 0x3a, 0xcd, 0xe4, 0x4b, 0x48, 0x0b, 0x51, 0x67, 0x9f, 0xfc, 0x4d, 0x63, 0x93, 0x59,
	0x29, 0x94, 0x7d, 0x85, 0x85, 0xa8, 0x32, 0x53, 0x8f, 0x32, 0xbf, 0xcf, 0xcf, 0x87, 0x2a, 0x37,
	0x3d, 0xf8, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x7d, 0xba, 0x46, 0x83, 0x01, 0x00, 0x00,
}

// Code generated by protoc-gen-go.
// source: ApplicationPerformance.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ApplicationPerformance struct {
	// The UTC time (as known to the client computer) when the agent status message was generated
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// Application Name
	ApplicationName *string `protobuf:"bytes,3,req,name=applicationName" json:"applicationName,omitempty"`
	// Memory Utilization Metrics
	SizeMemory     *int64 `protobuf:"varint,4,req,name=sizeMemory" json:"sizeMemory,omitempty"`
	ResidentMemory *int64 `protobuf:"varint,5,req,name=residentMemory" json:"residentMemory,omitempty"`
	SharedMemory   *int64 `protobuf:"varint,6,req,name=sharedMemory" json:"sharedMemory,omitempty"`
	// CPU Utilization Metrics
	UserCPU    *int64   `protobuf:"varint,7,req,name=userCPU" json:"userCPU,omitempty"`
	SysCPU     *int64   `protobuf:"varint,8,req,name=sysCPU" json:"sysCPU,omitempty"`
	TotalCPU   *int64   `protobuf:"varint,9,req,name=totalCPU" json:"totalCPU,omitempty"`
	PercentCPU *float64 `protobuf:"fixed64,10,req,name=percentCPU" json:"percentCPU,omitempty"`
	// How many processes matches the given application (i.e. there might be N postgresql processes running)
	NumberOfProcesses *int32  `protobuf:"varint,11,req,name=numberOfProcesses" json:"numberOfProcesses,omitempty"`
	SiteId            *string `protobuf:"bytes,12,opt,name=siteId" json:"siteId,omitempty"`
	Uuid              *string `protobuf:"bytes,13,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *ApplicationPerformance) Reset()                    { *m = ApplicationPerformance{} }
func (m *ApplicationPerformance) String() string            { return proto1.CompactTextString(m) }
func (*ApplicationPerformance) ProtoMessage()               {}
func (*ApplicationPerformance) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *ApplicationPerformance) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *ApplicationPerformance) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *ApplicationPerformance) GetApplicationName() string {
	if m != nil && m.ApplicationName != nil {
		return *m.ApplicationName
	}
	return ""
}

func (m *ApplicationPerformance) GetSizeMemory() int64 {
	if m != nil && m.SizeMemory != nil {
		return *m.SizeMemory
	}
	return 0
}

func (m *ApplicationPerformance) GetResidentMemory() int64 {
	if m != nil && m.ResidentMemory != nil {
		return *m.ResidentMemory
	}
	return 0
}

func (m *ApplicationPerformance) GetSharedMemory() int64 {
	if m != nil && m.SharedMemory != nil {
		return *m.SharedMemory
	}
	return 0
}

func (m *ApplicationPerformance) GetUserCPU() int64 {
	if m != nil && m.UserCPU != nil {
		return *m.UserCPU
	}
	return 0
}

func (m *ApplicationPerformance) GetSysCPU() int64 {
	if m != nil && m.SysCPU != nil {
		return *m.SysCPU
	}
	return 0
}

func (m *ApplicationPerformance) GetTotalCPU() int64 {
	if m != nil && m.TotalCPU != nil {
		return *m.TotalCPU
	}
	return 0
}

func (m *ApplicationPerformance) GetPercentCPU() float64 {
	if m != nil && m.PercentCPU != nil {
		return *m.PercentCPU
	}
	return 0
}

func (m *ApplicationPerformance) GetNumberOfProcesses() int32 {
	if m != nil && m.NumberOfProcesses != nil {
		return *m.NumberOfProcesses
	}
	return 0
}

func (m *ApplicationPerformance) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *ApplicationPerformance) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*ApplicationPerformance)(nil), "ApplicationPerformance")
}

var fileDescriptor8 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xcb, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0xd5, 0x7b, 0x33, 0x7f, 0x2f, 0x3f, 0x16, 0x2a, 0xe6, 0x26, 0x55, 0x5d, 0xb1, 0xca,
	0x3b, 0x90, 0x22, 0xa1, 0x2e, 0x0a, 0x91, 0xa0, 0x0f, 0x60, 0x92, 0x69, 0xb1, 0x54, 0xc7, 0x96,
	0xed, 0x20, 0xb5, 0x4b, 0xde, 0x89, 0x1d, 0x0f, 0xc7, 0xd8, 0xad, 0xd4, 0x4d, 0x97, 0xf3, 0xcd,
	0xf1, 0xf1, 0x99, 0x03, 0x77, 0x8f, 0xc6, 0x6c, 0x65, 0x21, 0xbc, 0xd4, 0x55, 0x8e, 0x76, 0xad,
	0xad, 0x12, 0x55, 0x81, 0xa9, 0xb1, 0xda, 0xeb, 0x1b, 0x96, 0x6b, 0xe7, 0x37, 0x16, 0xdd, 0xfb,
	0xce, 0x1c, 0xd9, 0xec, 0xb7, 0x09, 0x93, 0xf3, 0x8f, 0xd8, 0x14, 0x12, 0x2f, 0x15, 0xbe, 0x79,
	0xa1, 0x0c, 0x6f, 0x4c, 0x9b, 0x0f, 0xad, 0x6c, 0xf8, 0xfd, 0xc3, 0x23, 0x74, 0x01, 0xb2, 0x5b,
	0x48, 0xc4, 0x06, 0x2b, 0xff, 0xbc, 0x5a, 0x3c, 0xf1, 0x26, 0x29, 0x92, 0xac, 0x4f, 0x8a, 0x76,
	0x5d, 0xcb, 0x92, 0x5d, 0xc1, 0x58, 0x9c, 0x8c, 0x5f, 0x84, 0x42, 0xde, 0x0a, 0x12, 0xc6, 0x00,
	0x9c, 0xdc, 0xe3, 0x12, 0x95, 0xb6, 0x3b, 0xde, 0x0e, 0xc6, 0x6c, 0x02, 0x23, 0xca, 0x25, 0x4b,
	0x32, 0x3b, 0xf2, 0x4e, 0xe4, 0x97, 0x30, 0x70, 0x9f, 0xc2, 0x62, 0x79, 0xa4, 0xdd, 0x48, 0xc7,
	0xd0, 0xab, 0x1d, 0xda, 0x79, 0xbe, 0xe2, 0xbd, 0x08, 0x46, 0xd0, 0x75, 0x3b, 0x17, 0xe6, 0x7e,
	0x9c, 0xff, 0x43, 0xdf, 0x6b, 0x2f, 0xb6, 0x81, 0x24, 0x91, 0xd0, 0xa7, 0x06, 0x6d, 0x41, 0xfe,
	0x81, 0x01, 0xb1, 0x06, 0xbb, 0x86, 0x8b, 0xaa, 0x56, 0x1f, 0x68, 0x5f, 0xd7, 0xb9, 0xd5, 0x05,
	0x3a, 0x87, 0x8e, 0xff, 0xa3, 0x55, 0x27, 0x1a, 0x4a, 0x8f, 0x8b, 0x92, 0x0f, 0xa6, 0x0d, 0xca,
	0x3c, 0x81, 0x78, 0x14, 0x1f, 0x86, 0xe9, 0x74, 0x64, 0x36, 0x87, 0x59, 0xa1, 0x55, 0xba, 0x97,
	0x6b, 0x8f, 0x55, 0x4a, 0x99, 0xbe, 0xd0, 0x1e, 0x9a, 0x2d, 0xf4, 0x36, 0xa5, 0x9e, 0x1c, 0x15,
	0x94, 0xdd, 0x9f, 0x6f, 0x78, 0x79, 0x58, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x48, 0x9a,
	0xbb, 0xb6, 0x01, 0x00, 0x00,
}

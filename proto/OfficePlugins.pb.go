// Code generated by protoc-gen-go.
// source: OfficePlugins.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Message reporting information about an Office Plug-in installed on the client machine
type OfficePlugins struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// The fully qualified filename of the binary: i.e. 'c:\windows\system32\binary.exe'
	ImageFilepath *string `protobuf:"bytes,3,req,name=imageFilepath" json:"imageFilepath,omitempty"`
	// Office Plug-in Attribute
	Description *string `protobuf:"bytes,4,req,name=description" json:"description,omitempty"`
	// Office Plug-in Attribute
	FriendlyName *string `protobuf:"bytes,5,req,name=friendlyName" json:"friendlyName,omitempty"`
	// Whether or not the object was disabled by Ziften agent
	IsDisabled *int32 `protobuf:"varint,6,opt,name=isDisabled" json:"isDisabled,omitempty"`
	// MD5 for imageFilepath
	ImageFileMD5     *string `protobuf:"bytes,7,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	SiteId           *string `protobuf:"bytes,8,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string `protobuf:"bytes,9,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OfficePlugins) Reset()                    { *m = OfficePlugins{} }
func (m *OfficePlugins) String() string            { return proto1.CompactTextString(m) }
func (*OfficePlugins) ProtoMessage()               {}
func (*OfficePlugins) Descriptor() ([]byte, []int) { return fileDescriptor63, []int{0} }

func (m *OfficePlugins) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *OfficePlugins) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *OfficePlugins) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *OfficePlugins) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *OfficePlugins) GetFriendlyName() string {
	if m != nil && m.FriendlyName != nil {
		return *m.FriendlyName
	}
	return ""
}

func (m *OfficePlugins) GetIsDisabled() int32 {
	if m != nil && m.IsDisabled != nil {
		return *m.IsDisabled
	}
	return 0
}

func (m *OfficePlugins) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *OfficePlugins) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *OfficePlugins) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*OfficePlugins)(nil), "OfficePlugins")
}

var fileDescriptor63 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xbd, 0x4e, 0xeb, 0x40,
	0x10, 0x85, 0xe5, 0xfc, 0xdd, 0x78, 0x2e, 0xa6, 0xd8, 0x04, 0x34, 0x82, 0xc6, 0x4a, 0x95, 0xca,
	0x1d, 0x0d, 0xa5, 0x65, 0x81, 0x52, 0x04, 0x22, 0x01, 0x0f, 0x60, 0xec, 0xb1, 0x19, 0xc9, 0xf6,
	0x5a, 0x3b, 0x6b, 0xa4, 0x50, 0xf2, 0x4e, 0xbc, 0x10, 0x4f, 0xc2, 0xda, 0x96, 0x40, 0x29, 0xe7,
	0xdb, 0x4f, 0x47, 0xe7, 0x2c, 0xac, 0x1e, 0x8b, 0x82, 0x33, 0x3a, 0x54, 0x5d, 0xc9, 0x8d, 0x44,
	0xad, 0xd1, 0x56, 0x5f, 0xa9, 0x83, 0x16, 0x5b, 0x1a, 0x92, 0xe7, 0x63, 0x4b, 0x23, 0xdb, 0x7c,
	0x7b, 0x10, 0x9c, 0xb8, 0x2a, 0x04, 0xdf, 0x72, 0x4d, 0x4f, 0x36, 0xad, 0x5b, 0xf4, 0xc2, 0xc9,
	0x76, 0x1a, 0x07, 0x9f, 0x5f, 0x38, 0x40, 0xe9, 0xa1, 0xba, 0x06, 0x3f, 0x2d, 0xa9, 0xb1, 0xf7,
	0x2f, 0xbb, 0x04, 0x27, 0xce, 0xf0, 0xe3, 0xa5, 0x33, 0x66, 0x5d, 0xc7, 0xb9, 0xba, 0x80, 0x80,
	0x6b, 0xf7, 0x7c, 0xc7, 0x15, 0xb5, 0xa9, 0x7d, 0xc3, 0x69, 0x2f, 0xa8, 0x15, 0xfc, 0xcf, 0x49,
	0x32, 0xc3, 0xad, 0x65, 0xdd, 0xe0, 0x6c, 0x80, 0x6b, 0x38, 0x2b, 0x0c, 0x53, 0x93, 0x57, 0xc7,
	0x87, 0xb4, 0x26, 0x9c, 0x0f, 0x54, 0x01, 0xb0, 0x24, 0x2c, 0xe9, 0x6b, 0x45, 0x39, 0x2e, 0x42,
	0x6f, 0x3b, 0xef, 0xcd, 0xdf, 0xd4, 0x7d, 0x72, 0x83, 0xff, 0x1c, 0xf5, 0xd5, 0x39, 0x2c, 0x84,
	0x2d, 0xed, 0x72, 0x5c, 0x0e, 0xf7, 0x25, 0x0c, 0x1d, 0xd0, 0xef, 0xaf, 0xbf, 0x4e, 0xf1, 0x2d,
	0x6c, 0x32, 0x5d, 0x47, 0x1f, 0x5c, 0x58, 0x6a, 0x22, 0x21, 0xf3, 0x4e, 0x66, 0xdc, 0x9f, 0xe9,
	0x2a, 0x72, 0xb3, 0xc4, 0x45, 0xc7, 0xeb, 0x93, 0x7f, 0xd8, 0x8f, 0xf4, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x3a, 0x61, 0x8e, 0x22, 0x4a, 0x01, 0x00, 0x00,
}

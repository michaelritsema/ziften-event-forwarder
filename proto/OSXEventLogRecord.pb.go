// Code generated by protoc-gen-go.
// source: OSXEventLogRecord.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OSXEventLogRecord_EventType int32

const (
	OSXEventLogRecord_EVENT_TYPE_APP_CRASH           OSXEventLogRecord_EventType = 0
	OSXEventLogRecord_EVENT_TYPE_APP_HANG            OSXEventLogRecord_EventType = 1
	OSXEventLogRecord_EVENT_TYPE_SYSTEM_KERNEL_PANIC OSXEventLogRecord_EventType = 2
)

var OSXEventLogRecord_EventType_name = map[int32]string{
	0: "EVENT_TYPE_APP_CRASH",
	1: "EVENT_TYPE_APP_HANG",
	2: "EVENT_TYPE_SYSTEM_KERNEL_PANIC",
}
var OSXEventLogRecord_EventType_value = map[string]int32{
	"EVENT_TYPE_APP_CRASH":           0,
	"EVENT_TYPE_APP_HANG":            1,
	"EVENT_TYPE_SYSTEM_KERNEL_PANIC": 2,
}

func (x OSXEventLogRecord_EventType) Enum() *OSXEventLogRecord_EventType {
	p := new(OSXEventLogRecord_EventType)
	*p = x
	return p
}
func (x OSXEventLogRecord_EventType) String() string {
	return proto1.EnumName(OSXEventLogRecord_EventType_name, int32(x))
}
func (x *OSXEventLogRecord_EventType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(OSXEventLogRecord_EventType_value, data, "OSXEventLogRecord_EventType")
	if err != nil {
		return err
	}
	*x = OSXEventLogRecord_EventType(value)
	return nil
}
func (OSXEventLogRecord_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor46, []int{0, 0}
}

type OSXEventLogRecord struct {
	// The UTC time that the message was produced by the agent. (e.g. "1370369446")
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// The UTC time report was created (e.g. "1370369446")
	TimeGenerated *int64 `protobuf:"varint,3,req,name=timeGenerated" json:"timeGenerated,omitempty"`
	// name of app/daemon (e.g. "iTunes")
	ImageFilename *string `protobuf:"bytes,4,req,name=imageFilename" json:"imageFilename,omitempty"`
	// full path to application  (e.g. "/Applications/iTunes.app/Contents/MacOS/iTunes")
	ImageFilepath *string `protobuf:"bytes,5,opt,name=imageFilepath" json:"imageFilepath,omitempty"`
	// type of event (e.g. 0)
	EventType *OSXEventLogRecord_EventType `protobuf:"varint,6,req,name=eventType,enum=OSXEventLogRecord_EventType" json:"eventType,omitempty"`
	SiteId    *string                      `protobuf:"bytes,7,opt,name=siteId" json:"siteId,omitempty"`
	// md5 hash of the product (e.g. c371d25d402527d3a06308689d3741b1)
	ImageFileMD5     *string `protobuf:"bytes,8,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	IsDeamon         *int32  `protobuf:"varint,9,opt,name=isDeamon" json:"isDeamon,omitempty"`
	Uuid             *string `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OSXEventLogRecord) Reset()                    { *m = OSXEventLogRecord{} }
func (m *OSXEventLogRecord) String() string            { return proto1.CompactTextString(m) }
func (*OSXEventLogRecord) ProtoMessage()               {}
func (*OSXEventLogRecord) Descriptor() ([]byte, []int) { return fileDescriptor46, []int{0} }

func (m *OSXEventLogRecord) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *OSXEventLogRecord) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *OSXEventLogRecord) GetTimeGenerated() int64 {
	if m != nil && m.TimeGenerated != nil {
		return *m.TimeGenerated
	}
	return 0
}

func (m *OSXEventLogRecord) GetImageFilename() string {
	if m != nil && m.ImageFilename != nil {
		return *m.ImageFilename
	}
	return ""
}

func (m *OSXEventLogRecord) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *OSXEventLogRecord) GetEventType() OSXEventLogRecord_EventType {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return OSXEventLogRecord_EVENT_TYPE_APP_CRASH
}

func (m *OSXEventLogRecord) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *OSXEventLogRecord) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *OSXEventLogRecord) GetIsDeamon() int32 {
	if m != nil && m.IsDeamon != nil {
		return *m.IsDeamon
	}
	return 0
}

func (m *OSXEventLogRecord) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*OSXEventLogRecord)(nil), "OSXEventLogRecord")
	proto1.RegisterEnum("OSXEventLogRecord_EventType", OSXEventLogRecord_EventType_name, OSXEventLogRecord_EventType_value)
}

var fileDescriptor46 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x6f, 0xda, 0x40,
	0x14, 0xc4, 0x8b, 0xf9, 0x53, 0xfc, 0x54, 0x90, 0xbb, 0xa5, 0x65, 0xd5, 0x56, 0x15, 0xf2, 0xa9,
	0x27, 0x57, 0xaa, 0xd4, 0x6b, 0x25, 0x1b, 0x36, 0x80, 0x02, 0x8e, 0x85, 0x9d, 0x28, 0x9c, 0x2c,
	0x07, 0xbf, 0x10, 0x4b, 0xd8, 0x6b, 0xd9, 0x0b, 0x52, 0x72, 0xcc, 0x77, 0xca, 0xb7, 0xcb, 0x21,
	0xbb, 0x46, 0x09, 0x49, 0xb8, 0xfe, 0x66, 0xde, 0x68, 0x66, 0x17, 0xfa, 0x67, 0xfe, 0x25, 0xdb,
	0x61, 0x26, 0x66, 0x7c, 0xbd, 0xc0, 0x15, 0x2f, 0x62, 0x2b, 0x2f, 0xb8, 0xe0, 0xdf, 0x89, 0xc7,
	0x4b, 0xb1, 0x2e, 0xb0, 0x0c, 0x6e, 0x73, 0xdc, 0x33, 0xf3, 0x51, 0x83, 0xcf, 0x47, 0x7e, 0x32,
	0x00, 0x5d, 0x24, 0x29, 0xfa, 0x22, 0x4a, 0x73, 0x5a, 0x1b, 0x68, 0xbf, 0xeb, 0x4e, 0xe7, 0xfe,
	0x81, 0x56, 0xb0, 0x54, 0x90, 0xfc, 0x00, 0x3d, 0x5a, 0xcb, 0x9b, 0xf1, 0xf9, 0x74, 0x44, 0x35,
	0xe9, 0xd0, 0x9d, 0xb6, 0x74, 0x34, 0xb6, 0xdb, 0x24, 0x26, 0x5f, 0xa1, 0xa3, 0x9c, 0x63, 0xcc,
	0xb0, 0x88, 0x04, 0xc6, 0xb4, 0xae, 0x22, 0x14, 0x4e, 0x52, 0x79, 0x75, 0x92, 0x6c, 0x30, 0x8b,
	0x52, 0xa4, 0x0d, 0x75, 0xf7, 0x06, 0xe7, 0x91, 0xb8, 0xa1, 0xcd, 0x41, 0x4d, 0xe2, 0x3f, 0xa0,
	0xa3, 0x6a, 0xa5, 0xca, 0xd2, 0x96, 0x74, 0x76, 0xff, 0xfe, 0xb4, 0x8e, 0xa7, 0xb1, 0x67, 0x0f,
	0xe9, 0x42, 0xab, 0x4c, 0x04, 0x4e, 0x63, 0xfa, 0xb1, 0x0a, 0xe8, 0xc1, 0xa7, 0x97, 0xdc, 0xf9,
	0xe8, 0x1f, 0x6d, 0x57, 0xd4, 0x80, 0x76, 0x52, 0x8e, 0x30, 0x4a, 0x79, 0x46, 0x75, 0x49, 0x9a,
	0xe4, 0x1b, 0x54, 0xad, 0x29, 0x28, 0xfd, 0xb0, 0xc2, 0xbc, 0x02, 0xfd, 0x10, 0x4e, 0xa1, 0xc7,
	0x2e, 0x98, 0x1b, 0x84, 0xc1, 0xd2, 0x63, 0xa1, 0xed, 0x79, 0xe1, 0x70, 0x61, 0xfb, 0x13, 0xe3,
	0x03, 0xe9, 0xc3, 0x97, 0x77, 0xca, 0xc4, 0x76, 0xc7, 0x46, 0x8d, 0x98, 0xf0, 0xeb, 0x95, 0xe0,
	0x2f, 0xfd, 0x80, 0xcd, 0xc3, 0x53, 0xb6, 0x70, 0xd9, 0x2c, 0xf4, 0x6c, 0x77, 0x3a, 0x34, 0x34,
	0xe7, 0x3f, 0x98, 0x2b, 0x9e, 0x5a, 0x77, 0xc9, 0xb5, 0xc0, 0xcc, 0x2a, 0xb1, 0xd8, 0x61, 0xb1,
	0xff, 0x99, 0x15, 0xdf, 0x58, 0xf2, 0xb1, 0x4b, 0x39, 0xc0, 0xa1, 0x47, 0xb3, 0xe7, 0x7b, 0xe5,
	0x29, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xb3, 0xe8, 0xa0, 0xec, 0x01, 0x00, 0x00,
}

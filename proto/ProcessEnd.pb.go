// Code generated by protoc-gen-go.
// source: ProcessEnd.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProcessEnd struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	PID       *int32  `protobuf:"varint,3,req,name=PID" json:"PID,omitempty"`
	// The fully qualified filename of the binary: i.e. 'c:\windows\system32\binary.exe'
	ImageFilepath *string `protobuf:"bytes,4,req,name=imageFilepath" json:"imageFilepath,omitempty"`
	// Data derived from Win32 API GetProcessTimes, GetProcessIoCounters and GetProcessMemoryInfo
	// See msdn more information
	CreationTime        *int64 `protobuf:"varint,5,req,name=creationTime" json:"creationTime,omitempty"`
	ExitTime            *int64 `protobuf:"varint,6,req,name=exitTime" json:"exitTime,omitempty"`
	ProcessorKernelTime *int64 `protobuf:"varint,7,req,name=processorKernelTime" json:"processorKernelTime,omitempty"`
	ProcessorUserTime   *int64 `protobuf:"varint,8,req,name=processorUserTime" json:"processorUserTime,omitempty"`
	ReadTransferCount   *int64 `protobuf:"varint,9,req,name=readTransferCount" json:"readTransferCount,omitempty"`
	WriteTransferCount  *int64 `protobuf:"varint,10,req,name=writeTransferCount" json:"writeTransferCount,omitempty"`
	WorkingSetSize      *int32 `protobuf:"varint,11,req,name=workingSetSize" json:"workingSetSize,omitempty"`
	// MD5 for imageFilepath
	ImageFileMD5     *string `protobuf:"bytes,12,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	SiteId           *string `protobuf:"bytes,13,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string `protobuf:"bytes,14,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProcessEnd) Reset()                    { *m = ProcessEnd{} }
func (m *ProcessEnd) String() string            { return proto1.CompactTextString(m) }
func (*ProcessEnd) ProtoMessage()               {}
func (*ProcessEnd) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{0} }

func (m *ProcessEnd) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *ProcessEnd) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *ProcessEnd) GetPID() int32 {
	if m != nil && m.PID != nil {
		return *m.PID
	}
	return 0
}

func (m *ProcessEnd) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *ProcessEnd) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *ProcessEnd) GetExitTime() int64 {
	if m != nil && m.ExitTime != nil {
		return *m.ExitTime
	}
	return 0
}

func (m *ProcessEnd) GetProcessorKernelTime() int64 {
	if m != nil && m.ProcessorKernelTime != nil {
		return *m.ProcessorKernelTime
	}
	return 0
}

func (m *ProcessEnd) GetProcessorUserTime() int64 {
	if m != nil && m.ProcessorUserTime != nil {
		return *m.ProcessorUserTime
	}
	return 0
}

func (m *ProcessEnd) GetReadTransferCount() int64 {
	if m != nil && m.ReadTransferCount != nil {
		return *m.ReadTransferCount
	}
	return 0
}

func (m *ProcessEnd) GetWriteTransferCount() int64 {
	if m != nil && m.WriteTransferCount != nil {
		return *m.WriteTransferCount
	}
	return 0
}

func (m *ProcessEnd) GetWorkingSetSize() int32 {
	if m != nil && m.WorkingSetSize != nil {
		return *m.WorkingSetSize
	}
	return 0
}

func (m *ProcessEnd) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *ProcessEnd) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *ProcessEnd) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto1.RegisterType((*ProcessEnd)(nil), "ProcessEnd")
}

var fileDescriptor70 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x91, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xc7, 0xc3, 0xa7, 0x74, 0xf8, 0x08, 0xac, 0x4a, 0x56, 0xb8, 0x10, 0x4e, 0x9e, 0x7a, 0x33,
	0xde, 0x2b, 0x6a, 0x88, 0x21, 0x21, 0x01, 0x1e, 0xa0, 0x69, 0x07, 0xdc, 0xd8, 0xee, 0x36, 0xbb,
	0x5b, 0x51, 0x8e, 0xbe, 0x93, 0x6f, 0xe3, 0xc3, 0x38, 0xdd, 0x46, 0x1a, 0x8f, 0xfb, 0xfb, 0xfd,
	0x33, 0x9d, 0xf9, 0x17, 0x86, 0x6b, 0xad, 0x22, 0x34, 0xe6, 0x51, 0xc6, 0x7e, 0xa6, 0x95, 0x55,
	0x13, 0xb6, 0x56, 0xc6, 0x1e, 0x34, 0x9a, 0xed, 0x67, 0x86, 0x25, 0x9b, 0xff, 0xd4, 0x01, 0xaa,
	0x20, 0x9b, 0x81, 0x67, 0x45, 0x8a, 0x1b, 0x1b, 0xa6, 0x19, 0xaf, 0xcd, 0xea, 0xb7, 0x8d, 0xa0,
	0xff, 0xf5, 0xcd, 0x1d, 0x34, 0x05, 0x64, 0x53, 0xf0, 0xc2, 0x03, 0x4a, 0xfb, 0xbc, 0x5b, 0x2e,
	0x78, 0x9d, 0x12, 0x5e, 0xd0, 0xa1, 0x44, 0x33, 0xcf, 0x45, 0xcc, 0xba, 0xd0, 0x58, 0x13, 0x6e,
	0x10, 0x6e, 0xb1, 0x6b, 0xe8, 0x8b, 0x94, 0xb2, 0x4f, 0x22, 0xc1, 0x2c, 0xb4, 0xaf, 0xbc, 0x59,
	0xa4, 0xd9, 0x15, 0xf4, 0x22, 0x8d, 0xa1, 0x15, 0x4a, 0x6e, 0x69, 0x2a, 0x6f, 0x15, 0x5f, 0x61,
	0x43, 0xe8, 0xe0, 0x87, 0xb0, 0x8e, 0xb4, 0x1d, 0x99, 0xc2, 0x65, 0x56, 0x2e, 0xa6, 0xf4, 0x0b,
	0x6a, 0x89, 0x89, 0x93, 0x17, 0x4e, 0xde, 0xc0, 0xe8, 0x2c, 0x77, 0x06, 0xb5, 0x53, 0x9d, 0x3f,
	0x45, 0xe3, 0xe3, 0xad, 0x0e, 0xa5, 0xd9, 0xa3, 0x7e, 0x50, 0xb9, 0xb4, 0xdc, 0x73, 0x6a, 0x02,
	0xec, 0xa8, 0x85, 0xc5, 0xff, 0x0e, 0x9c, 0x1b, 0xc3, 0xe0, 0xa8, 0xf4, 0x9b, 0x90, 0x87, 0x0d,
	0xda, 0x8d, 0x38, 0x21, 0xef, 0xba, 0x2b, 0x68, 0xdd, 0xf3, 0x15, 0xab, 0xc5, 0x1d, 0xef, 0xcd,
	0x6a, 0x74, 0xc4, 0x00, 0xda, 0x86, 0x06, 0x2d, 0x63, 0xde, 0x77, 0xef, 0x31, 0xb8, 0x02, 0xf8,
	0xa0, 0x78, 0x55, 0x85, 0x04, 0xf7, 0x30, 0x8f, 0x54, 0xea, 0x9f, 0xc4, 0xde, 0xa2, 0xf4, 0x69,
	0xd1, 0x77, 0xd4, 0x65, 0xf3, 0x91, 0x4a, 0x7c, 0xea, 0xd4, 0xd0, 0xe8, 0x60, 0x54, 0xfd, 0x81,
	0x55, 0x89, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x65, 0xab, 0x2c, 0xbb, 0xbe, 0x01, 0x00, 0x00,
}

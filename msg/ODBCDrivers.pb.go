// Code generated by protoc-gen-go.
// source: ODBCDrivers.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Message reporting list of ODBC Data Sources
type ODBCDrivers struct {
	// The time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// Name of Driver
	Name []string `protobuf:"bytes,3,rep,name=Name" json:"Name,omitempty"`
	// API Level
	ApiLevel []string `protobuf:"bytes,4,rep,name=apiLevel" json:"apiLevel,omitempty"`
	// SQL Level
	SqlLevel []string `protobuf:"bytes,5,rep,name=sqlLevel" json:"sqlLevel,omitempty"`
	// ODBC Version
	DriverODBCVer []string `protobuf:"bytes,6,rep,name=DriverODBCVer" json:"DriverODBCVer,omitempty"`
	// Timeout for Connection Pool
	PoolTimeout []string `protobuf:"bytes,7,rep,name=PoolTimeout" json:"PoolTimeout,omitempty"`
	// Driver imagePath
	ImagePath        []string `protobuf:"bytes,8,rep,name=ImagePath" json:"ImagePath,omitempty"`
	SiteId           *string  `protobuf:"bytes,9,opt,name=siteId" json:"siteId,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ODBCDrivers) Reset()                    { *m = ODBCDrivers{} }
func (m *ODBCDrivers) String() string            { return proto.CompactTextString(m) }
func (*ODBCDrivers) ProtoMessage()               {}
func (*ODBCDrivers) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{0} }

func (m *ODBCDrivers) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *ODBCDrivers) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *ODBCDrivers) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ODBCDrivers) GetApiLevel() []string {
	if m != nil {
		return m.ApiLevel
	}
	return nil
}

func (m *ODBCDrivers) GetSqlLevel() []string {
	if m != nil {
		return m.SqlLevel
	}
	return nil
}

func (m *ODBCDrivers) GetDriverODBCVer() []string {
	if m != nil {
		return m.DriverODBCVer
	}
	return nil
}

func (m *ODBCDrivers) GetPoolTimeout() []string {
	if m != nil {
		return m.PoolTimeout
	}
	return nil
}

func (m *ODBCDrivers) GetImagePath() []string {
	if m != nil {
		return m.ImagePath
	}
	return nil
}

func (m *ODBCDrivers) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func init() {
	proto.RegisterType((*ODBCDrivers)(nil), "ODBCDrivers")
}

var fileDescriptor39 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0xcf, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0x06, 0x70, 0xba, 0xd6, 0xd9, 0xbc, 0x73, 0xe2, 0x22, 0x42, 0xd0, 0x4b, 0xd9, 0x69, 0xa7,
	0x9e, 0x3d, 0xd7, 0x82, 0x14, 0xfc, 0x53, 0x70, 0x7a, 0x0f, 0xdb, 0xeb, 0x0c, 0x34, 0x4b, 0x4d,
	0xde, 0x0e, 0xf4, 0xe8, 0x77, 0xf2, 0x63, 0xf8, 0x9d, 0xcc, 0x12, 0x06, 0xbb, 0xfe, 0x78, 0x92,
	0xe7, 0x7d, 0x60, 0xf6, 0x5c, 0x57, 0x77, 0xb5, 0x55, 0x3b, 0xb4, 0xae, 0xec, 0xad, 0x21, 0x73,
	0xcd, 0x5b, 0xe3, 0x68, 0x63, 0xd1, 0x2d, 0xbf, 0x7a, 0x8c, 0x36, 0xff, 0x4b, 0x60, 0x72, 0x94,
	0xe4, 0x05, 0x30, 0x52, 0x1a, 0x5f, 0x48, 0xea, 0x5e, 0x24, 0xc5, 0x68, 0x91, 0x56, 0xd3, 0x9f,
	0x5f, 0x11, 0xd0, 0xed, 0x91, 0xdf, 0x00, 0x93, 0x1b, 0xdc, 0xd2, 0xfd, 0x6b, 0x53, 0x8b, 0x91,
	0x4f, 0xb0, 0x2a, 0xf7, 0x89, 0x6c, 0x18, 0xd4, 0x9a, 0x9f, 0x41, 0xf6, 0x24, 0x35, 0x8a, 0xb4,
	0x48, 0x17, 0x8c, 0x5f, 0x40, 0x2e, 0x7b, 0xf5, 0x80, 0x3b, 0xec, 0x44, 0x76, 0x10, 0xf7, 0xd9,
	0x45, 0x39, 0x09, 0x72, 0x05, 0xd3, 0xd8, 0xbd, 0xbf, 0xe2, 0x0d, 0xad, 0x18, 0x07, 0xbe, 0x84,
	0x49, 0x6b, 0x4c, 0xb7, 0xf4, 0xb5, 0x66, 0x20, 0x71, 0x1a, 0x70, 0x06, 0xac, 0xd1, 0xbe, 0xbc,
	0x95, 0xf4, 0x21, 0xf2, 0x40, 0xe7, 0x30, 0x76, 0x8a, 0xb0, 0x59, 0x0b, 0x56, 0x24, 0xfe, 0x94,
	0x5b, 0x98, 0xaf, 0x8c, 0x2e, 0xbf, 0xd5, 0x3b, 0xe1, 0xb6, 0x74, 0x68, 0xfd, 0xcf, 0x71, 0xea,
	0xca, 0x74, 0xa5, 0xdf, 0xe0, 0xfc, 0xfb, 0x8a, 0x1f, 0x4d, 0x7e, 0x8c, 0xf6, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x00, 0x71, 0x9e, 0x63, 0x31, 0x01, 0x00, 0x00,
}

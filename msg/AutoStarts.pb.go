// Code generated by protoc-gen-go.
// source: AutoStarts.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Message reporting information about an executable found in the startup folder that is 'autostarted' by Windows on the client machine
type AutoStarts struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// The fully qualified filename of the binary: i.e. 'c:\windows\system32\binary.exe'
	ImageFilepath *string `protobuf:"bytes,3,req,name=imageFilepath" json:"imageFilepath,omitempty"`
	// Whether or not the object was disabled by Ziften agent
	IsDisabled *int32 `protobuf:"varint,4,opt,name=isDisabled" json:"isDisabled,omitempty"`
	// This can be a link (*.lnk file) pointing to the executable, or the executable itself. In the latter case, the value of this field is the same as imageFilepath
	EntryPath *string `protobuf:"bytes,5,req,name=entryPath" json:"entryPath,omitempty"`
	// MD5 for imageFilepath
	ImageFileMD5 *string `protobuf:"bytes,6,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	SiteId       *string `protobuf:"bytes,7,opt,name=siteId" json:"siteId,omitempty"`
	Uuid         *string `protobuf:"bytes,8,opt,name=uuid" json:"uuid,omitempty"`
	// Tie this to the actual system boot (uses UUID)
	BootAnalysisGUID *string `protobuf:"bytes,9,opt,name=bootAnalysisGUID" json:"bootAnalysisGUID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AutoStarts) Reset()                    { *m = AutoStarts{} }
func (m *AutoStarts) String() string            { return proto.CompactTextString(m) }
func (*AutoStarts) ProtoMessage()               {}
func (*AutoStarts) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *AutoStarts) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *AutoStarts) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *AutoStarts) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *AutoStarts) GetIsDisabled() int32 {
	if m != nil && m.IsDisabled != nil {
		return *m.IsDisabled
	}
	return 0
}

func (m *AutoStarts) GetEntryPath() string {
	if m != nil && m.EntryPath != nil {
		return *m.EntryPath
	}
	return ""
}

func (m *AutoStarts) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *AutoStarts) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *AutoStarts) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *AutoStarts) GetBootAnalysisGUID() string {
	if m != nil && m.BootAnalysisGUID != nil {
		return *m.BootAnalysisGUID
	}
	return ""
}

func init() {
	proto.RegisterType((*AutoStarts)(nil), "AutoStarts")
}

var fileDescriptor10 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xe9, 0x5f, 0xbb, 0x83, 0x95, 0x76, 0x51, 0x59, 0xf4, 0x12, 0x72, 0xea, 0x29, 0x37,
	0xf1, 0xdc, 0x10, 0x94, 0x1e, 0x0a, 0x05, 0xf5, 0x01, 0xb6, 0xcd, 0x58, 0x17, 0x92, 0x6c, 0xd8,
	0x99, 0x08, 0xf1, 0xe8, 0x3b, 0xf9, 0x54, 0xbe, 0x84, 0x9b, 0x0d, 0x58, 0x3d, 0x7e, 0xbf, 0xfd,
	0xed, 0x7e, 0x3b, 0x03, 0x8b, 0x75, 0xc3, 0xf6, 0x89, 0xb5, 0x63, 0x4a, 0x6a, 0x67, 0xd9, 0xde,
	0xc8, 0x9d, 0x25, 0x3e, 0x3a, 0xa4, 0xe7, 0xb6, 0xc6, 0x9e, 0xc5, 0xdf, 0x03, 0x80, 0x93, 0x28,
	0x23, 0x10, 0x6c, 0x4a, 0xf4, 0xa9, 0xac, 0xd5, 0x20, 0x1a, 0xae, 0x46, 0xe9, 0xfc, 0xf3, 0x4b,
	0x05, 0x48, 0x1d, 0x94, 0xb7, 0x20, 0xf4, 0x11, 0x2b, 0x7e, 0x7c, 0xd9, 0x64, 0x6a, 0xe8, 0x0d,
	0x91, 0xce, 0xbc, 0x31, 0x6e, 0x1a, 0x93, 0xcb, 0x2b, 0x98, 0x9b, 0xd2, 0x1f, 0x3f, 0x98, 0x02,
	0x6b, 0xcd, 0x6f, 0x6a, 0xd4, 0x09, 0x52, 0x02, 0x18, 0xca, 0x0c, 0xe9, 0x7d, 0x81, 0xb9, 0x1a,
	0x47, 0x83, 0xd5, 0x44, 0x2e, 0x41, 0xf8, 0x57, 0x5c, 0xbb, 0xeb, 0xb4, 0x49, 0xd0, 0x2e, 0xe1,
	0xfc, 0xf7, 0xf6, 0x36, 0xbb, 0x53, 0x53, 0x2f, 0x0a, 0x79, 0x01, 0x53, 0x32, 0x8c, 0x9b, 0x5c,
	0x9d, 0x85, 0x7c, 0x0d, 0xa1, 0x4b, 0xcd, 0xba, 0xf4, 0xa7, 0x3b, 0x86, 0xc5, 0xde, 0x5a, 0x5e,
	0x57, 0xba, 0x68, 0xc9, 0x50, 0xf8, 0x9f, 0xf8, 0xef, 0xa4, 0xf7, 0x10, 0x1f, 0x6c, 0x99, 0x7c,
	0x98, 0x57, 0xc6, 0x2a, 0x21, 0x74, 0xef, 0xe8, 0xfa, 0x45, 0x1c, 0x6c, 0x91, 0xf8, 0x11, 0xc9,
	0xd7, 0xa7, 0xcb, 0xd3, 0x42, 0xb6, 0x3d, 0xfa, 0x09, 0x00, 0x00, 0xff, 0xff, 0x00, 0x27, 0x12,
	0xed, 0x4d, 0x01, 0x00, 0x00,
}

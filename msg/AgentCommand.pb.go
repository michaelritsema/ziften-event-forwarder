// Code generated by protoc-gen-go.
// source: AgentCommand.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AgentCommand_CommandType int32

const (
	AgentCommand_ClearServerMsgCache AgentCommand_CommandType = 0
	AgentCommand_FetchFile           AgentCommand_CommandType = 1
)

var AgentCommand_CommandType_name = map[int32]string{
	0: "ClearServerMsgCache",
	1: "FetchFile",
}
var AgentCommand_CommandType_value = map[string]int32{
	"ClearServerMsgCache": 0,
	"FetchFile":           1,
}

func (x AgentCommand_CommandType) Enum() *AgentCommand_CommandType {
	p := new(AgentCommand_CommandType)
	*p = x
	return p
}
func (x AgentCommand_CommandType) String() string {
	return proto.EnumName(AgentCommand_CommandType_name, int32(x))
}
func (x *AgentCommand_CommandType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AgentCommand_CommandType_value, data, "AgentCommand_CommandType")
	if err != nil {
		return err
	}
	*x = AgentCommand_CommandType(value)
	return nil
}
func (AgentCommand_CommandType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

// Message instructing the agent to execute a command (currently only clears cache of messages to server)
type AgentCommand struct {
	// The UTC time that the message was produced by the server.
	TimeStamp *int64                    `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	Command   *AgentCommand_CommandType `protobuf:"varint,2,req,name=command,enum=AgentCommand_CommandType" json:"command,omitempty"`
	// The server assigns a command identifier to all command jobs
	// The agent will return the identifier in the command response
	CommandIdentifier *uint64 `protobuf:"varint,3,req,name=commandIdentifier" json:"commandIdentifier,omitempty"`
	SiteId            *string `protobuf:"bytes,4,opt,name=siteId" json:"siteId,omitempty"`
	CommandData       *string `protobuf:"bytes,5,opt,name=commandData" json:"commandData,omitempty"`
	Uuid              *string `protobuf:"bytes,6,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *AgentCommand) Reset()                    { *m = AgentCommand{} }
func (m *AgentCommand) String() string            { return proto.CompactTextString(m) }
func (*AgentCommand) ProtoMessage()               {}
func (*AgentCommand) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AgentCommand) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *AgentCommand) GetCommand() AgentCommand_CommandType {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return AgentCommand_ClearServerMsgCache
}

func (m *AgentCommand) GetCommandIdentifier() uint64 {
	if m != nil && m.CommandIdentifier != nil {
		return *m.CommandIdentifier
	}
	return 0
}

func (m *AgentCommand) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *AgentCommand) GetCommandData() string {
	if m != nil && m.CommandData != nil {
		return *m.CommandData
	}
	return ""
}

func (m *AgentCommand) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*AgentCommand)(nil), "AgentCommand")
	proto.RegisterEnum("AgentCommand_CommandType", AgentCommand_CommandType_name, AgentCommand_CommandType_value)
}

var fileDescriptor1 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8f, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x4d, 0x1b, 0xab, 0x99, 0x6a, 0x69, 0x37, 0xa0, 0x5b, 0x4f, 0x25, 0xa7, 0xe2, 0x61,
	0x0f, 0x82, 0x07, 0x8f, 0x26, 0x52, 0xe8, 0xa1, 0x20, 0xd4, 0x17, 0x58, 0x92, 0x69, 0xba, 0x90,
	0xcd, 0x86, 0xdd, 0xa9, 0xa0, 0x47, 0xdf, 0xc9, 0xb7, 0xf1, 0x61, 0xcc, 0xbf, 0x43, 0x7a, 0x5a,
	0xe6, 0xb7, 0xbf, 0x99, 0x8f, 0x0f, 0xd8, 0x6b, 0x8e, 0x25, 0x25, 0x46, 0x6b, 0x59, 0x66, 0xa2,
	0xb2, 0x86, 0xcc, 0x03, 0x7b, 0x37, 0x8e, 0x72, 0x8b, 0xee, 0xe3, 0xab, 0xc2, 0x8e, 0x45, 0x7f,
	0x1e, 0xdc, 0x0c, 0x55, 0xb6, 0x80, 0x80, 0x94, 0xc6, 0x3d, 0x49, 0x5d, 0x71, 0x6f, 0x35, 0x5a,
	0x8f, 0xd9, 0x23, 0x5c, 0xa5, 0xdd, 0x2f, 0x1f, 0xd5, 0x60, 0xf6, 0xb4, 0x14, 0x67, 0xd7, 0xfb,
	0xb7, 0xb9, 0xca, 0x96, 0xb0, 0xe8, 0xdd, 0x6d, 0x56, 0x2b, 0xea, 0xa0, 0xd0, 0xf2, 0x71, 0xbd,
	0xe5, 0xb3, 0x19, 0x4c, 0x9c, 0x22, 0xdc, 0x66, 0xdc, 0x5f, 0x79, 0xeb, 0x80, 0x85, 0x30, 0xed,
	0xd5, 0x37, 0x49, 0x92, 0x5f, 0xb6, 0xf0, 0x0e, 0xfc, 0xd3, 0x49, 0x65, 0x7c, 0xd2, 0x4c, 0xf1,
	0xf5, 0xcf, 0x2f, 0x6f, 0xe7, 0xe8, 0x19, 0xa6, 0xc3, 0x98, 0x7b, 0x08, 0x93, 0x02, 0xa5, 0xdd,
	0xa3, 0xfd, 0x44, 0xbb, 0x73, 0x79, 0x22, 0xd3, 0x23, 0xce, 0x2f, 0xd8, 0x2d, 0x04, 0x1b, 0xa4,
	0xf4, 0xb8, 0x51, 0x05, 0xce, 0xbd, 0xf8, 0x05, 0xa2, 0x3a, 0x43, 0x7c, 0xab, 0x03, 0x61, 0x29,
	0x5c, 0x6b, 0x77, 0xcd, 0x53, 0x53, 0x08, 0x8d, 0xce, 0xc9, 0x1c, 0xe3, 0x70, 0x58, 0x67, 0xd7,
	0xc1, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x81, 0xbf, 0xd3, 0x42, 0x01, 0x00, 0x00,
}

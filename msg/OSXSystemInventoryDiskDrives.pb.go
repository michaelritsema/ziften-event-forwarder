// Code generated by protoc-gen-go.
// source: OSXSystemInventoryDiskDrives.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OSXSystemInventoryDiskDrives struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// GUID that helps join this message with associated SystemInventory message
	DiskDrivesGUID *string `protobuf:"bytes,3,req,name=diskDrivesGUID" json:"diskDrivesGUID,omitempty"`
	// See WMI's Win32_DiskDrive MOF for a detailed description the fields below
	Model []string `protobuf:"bytes,4,rep,name=model" json:"model,omitempty"`
	// e.g. Macintosh HD
	Caption []string `protobuf:"bytes,5,rep,name=caption" json:"caption,omitempty"`
	// e.g. 0A81F3B1-51D9-3335-B3E3-169C3640360C
	DeviceID []string `protobuf:"bytes,6,rep,name=deviceID" json:"deviceID,omitempty"`
	// e.g. SATA
	InterfaceType []string `protobuf:"bytes,7,rep,name=interfaceType" json:"interfaceType,omitempty"`
	// e.g. 4753367040
	Size             []string `protobuf:"bytes,8,rep,name=size" json:"size,omitempty"`
	SiteId           *string  `protobuf:"bytes,9,opt,name=siteId" json:"siteId,omitempty"`
	Uuid             *string  `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *OSXSystemInventoryDiskDrives) Reset()                    { *m = OSXSystemInventoryDiskDrives{} }
func (m *OSXSystemInventoryDiskDrives) String() string            { return proto.CompactTextString(m) }
func (*OSXSystemInventoryDiskDrives) ProtoMessage()               {}
func (*OSXSystemInventoryDiskDrives) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{0} }

func (m *OSXSystemInventoryDiskDrives) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *OSXSystemInventoryDiskDrives) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *OSXSystemInventoryDiskDrives) GetDiskDrivesGUID() string {
	if m != nil && m.DiskDrivesGUID != nil {
		return *m.DiskDrivesGUID
	}
	return ""
}

func (m *OSXSystemInventoryDiskDrives) GetModel() []string {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *OSXSystemInventoryDiskDrives) GetCaption() []string {
	if m != nil {
		return m.Caption
	}
	return nil
}

func (m *OSXSystemInventoryDiskDrives) GetDeviceID() []string {
	if m != nil {
		return m.DeviceID
	}
	return nil
}

func (m *OSXSystemInventoryDiskDrives) GetInterfaceType() []string {
	if m != nil {
		return m.InterfaceType
	}
	return nil
}

func (m *OSXSystemInventoryDiskDrives) GetSize() []string {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *OSXSystemInventoryDiskDrives) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *OSXSystemInventoryDiskDrives) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*OSXSystemInventoryDiskDrives)(nil), "OSXSystemInventoryDiskDrives")
}

var fileDescriptor57 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0x84, 0x40,
	0x14, 0xc7, 0x59, 0x75, 0x5d, 0x7d, 0xe0, 0x16, 0x42, 0x31, 0x54, 0x07, 0xb1, 0xcb, 0x9e, 0xfc,
	0x10, 0x22, 0x84, 0x87, 0x28, 0xb0, 0xa0, 0xab, 0xe9, 0x5b, 0x79, 0xb4, 0xce, 0xc8, 0xcc, 0xac,
	0xe0, 0x1e, 0x3b, 0xf6, 0x7d, 0xfa, 0x7e, 0x8d, 0x23, 0x14, 0x74, 0xd8, 0xe3, 0xfb, 0xf1, 0xfb,
	0xcf, 0x9b, 0xff, 0x83, 0xf4, 0xa9, 0x7a, 0xab, 0x26, 0xa5, 0xb1, 0x2f, 0xf9, 0x88, 0x5c, 0x0b,
	0x39, 0x15, 0xa4, 0x3e, 0x0a, 0x49, 0x23, 0xaa, 0x6c, 0x90, 0x42, 0x8b, 0x9b, 0xf8, 0x59, 0x28,
	0xdd, 0x49, 0x54, 0x2f, 0xd3, 0x80, 0x0b, 0x4b, 0xbf, 0x1c, 0xb8, 0x3b, 0x17, 0x8d, 0x13, 0x08,
	0x35, 0xf5, 0x58, 0xe9, 0xba, 0x1f, 0xd8, 0x2a, 0x71, 0x76, 0x6e, 0x1e, 0x7d, 0x7e, 0x33, 0x0b,
	0xd5, 0x0c, 0xe3, 0x5b, 0x08, 0xeb, 0xce, 0xe4, 0x1e, 0x5e, 0xcb, 0x82, 0x39, 0xc6, 0x08, 0xf3,
	0xc0, 0x18, 0xde, 0xf1, 0x48, 0xad, 0x89, 0x6f, 0xdb, 0xdf, 0xc7, 0xac, 0xe1, 0xfe, 0x33, 0x22,
	0x58, 0xf7, 0xa2, 0xc5, 0x03, 0xf3, 0x12, 0x77, 0x17, 0xc6, 0x17, 0xb0, 0x69, 0xea, 0x41, 0x93,
	0xe0, 0x6c, 0x6d, 0xc1, 0x25, 0x04, 0x2d, 0x8e, 0xd4, 0xa0, 0xc9, 0xfa, 0x96, 0x5c, 0x41, 0x44,
	0x5c, 0xa3, 0xdc, 0xd7, 0x0d, 0xce, 0x55, 0xd8, 0xc6, 0x62, 0x06, 0x9e, 0xa2, 0x13, 0xb2, 0x60,
	0x9e, 0x72, 0x30, 0x0b, 0xfc, 0x77, 0xea, 0x8c, 0x19, 0x6f, 0xc1, 0x57, 0xa4, 0xb1, 0x6c, 0x59,
	0x98, 0xac, 0x8c, 0x79, 0x0d, 0x76, 0x35, 0x83, 0x79, 0xfa, 0xfb, 0x4a, 0x5e, 0x42, 0xda, 0x88,
	0x3e, 0x3b, 0xd1, 0x5e, 0x23, 0xcf, 0x14, 0xca, 0x11, 0xe5, 0x72, 0xa7, 0x46, 0x1c, 0x32, 0xd3,
	0x57, 0x99, 0xa2, 0xf9, 0xfd, 0xb9, 0x7b, 0x3d, 0x2e, 0xd2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1c, 0x0c, 0xbf, 0x79, 0x90, 0x01, 0x00, 0x00,
}

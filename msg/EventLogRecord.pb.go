// Code generated by protoc-gen-go.
// source: EventLogRecord.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EventLogRecord struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// See EVENTLOGRECORD structure (Windows)for more information
	// http://msdn.microsoft.com/en-us/library/windows/desktop/aa363646(v=vs.85).aspx
	RecordNumber      *uint32 `protobuf:"varint,3,req,name=recordNumber" json:"recordNumber,omitempty"`
	Logfile           *string `protobuf:"bytes,4,req,name=logfile" json:"logfile,omitempty"`
	EventIdentifier   *uint32 `protobuf:"varint,5,req,name=eventIdentifier" json:"eventIdentifier,omitempty"`
	Category          *uint32 `protobuf:"varint,6,req,name=category" json:"category,omitempty"`
	TimeGenerated     *uint32 `protobuf:"varint,7,req,name=timeGenerated" json:"timeGenerated,omitempty"`
	TimeWritten       *uint32 `protobuf:"varint,8,req,name=timeWritten" json:"timeWritten,omitempty"`
	Message           *string `protobuf:"bytes,9,req,name=message" json:"message,omitempty"`
	EventType         *uint32 `protobuf:"varint,10,req,name=eventType" json:"eventType,omitempty"`
	SourceName        *string `protobuf:"bytes,11,req,name=sourceName" json:"sourceName,omitempty"`
	ImageFilename     *string `protobuf:"bytes,12,opt,name=imageFilename" json:"imageFilename,omitempty"`
	ImageFilepath     *string `protobuf:"bytes,13,opt,name=imageFilepath" json:"imageFilepath,omitempty"`
	ModuleFilename    *string `protobuf:"bytes,14,opt,name=moduleFilename" json:"moduleFilename,omitempty"`
	ModuleFilepath    *string `protobuf:"bytes,15,opt,name=moduleFilepath" json:"moduleFilepath,omitempty"`
	ServiceName       *string `protobuf:"bytes,16,opt,name=serviceName" json:"serviceName,omitempty"`
	ImageFileVersion  *string `protobuf:"bytes,17,opt,name=imageFileVersion" json:"imageFileVersion,omitempty"`
	ModuleFileVersion *string `protobuf:"bytes,18,opt,name=moduleFileVersion" json:"moduleFileVersion,omitempty"`
	// MD5 for imageFilepath
	ImageFileMD5 *string `protobuf:"bytes,19,opt,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	// MD5 for moduleFileVersion
	ModuleFileMD5 *string `protobuf:"bytes,20,opt,name=moduleFileMD5" json:"moduleFileMD5,omitempty"`
	// Who the event is logged against (who ran the process)
	AccountName      *string `protobuf:"bytes,21,opt,name=accountName" json:"accountName,omitempty"`
	DomainName       *string `protobuf:"bytes,22,opt,name=domainName" json:"domainName,omitempty"`
	SiteId           *string `protobuf:"bytes,23,opt,name=siteId" json:"siteId,omitempty"`
	FileContents     []byte  `protobuf:"bytes,24,opt,name=fileContents" json:"fileContents,omitempty"`
	FileName         *string `protobuf:"bytes,25,opt,name=fileName" json:"fileName,omitempty"`
	Uuid             *string `protobuf:"bytes,26,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EventLogRecord) Reset()                    { *m = EventLogRecord{} }
func (m *EventLogRecord) String() string            { return proto.CompactTextString(m) }
func (*EventLogRecord) ProtoMessage()               {}
func (*EventLogRecord) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *EventLogRecord) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *EventLogRecord) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *EventLogRecord) GetRecordNumber() uint32 {
	if m != nil && m.RecordNumber != nil {
		return *m.RecordNumber
	}
	return 0
}

func (m *EventLogRecord) GetLogfile() string {
	if m != nil && m.Logfile != nil {
		return *m.Logfile
	}
	return ""
}

func (m *EventLogRecord) GetEventIdentifier() uint32 {
	if m != nil && m.EventIdentifier != nil {
		return *m.EventIdentifier
	}
	return 0
}

func (m *EventLogRecord) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *EventLogRecord) GetTimeGenerated() uint32 {
	if m != nil && m.TimeGenerated != nil {
		return *m.TimeGenerated
	}
	return 0
}

func (m *EventLogRecord) GetTimeWritten() uint32 {
	if m != nil && m.TimeWritten != nil {
		return *m.TimeWritten
	}
	return 0
}

func (m *EventLogRecord) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EventLogRecord) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *EventLogRecord) GetSourceName() string {
	if m != nil && m.SourceName != nil {
		return *m.SourceName
	}
	return ""
}

func (m *EventLogRecord) GetImageFilename() string {
	if m != nil && m.ImageFilename != nil {
		return *m.ImageFilename
	}
	return ""
}

func (m *EventLogRecord) GetImageFilepath() string {
	if m != nil && m.ImageFilepath != nil {
		return *m.ImageFilepath
	}
	return ""
}

func (m *EventLogRecord) GetModuleFilename() string {
	if m != nil && m.ModuleFilename != nil {
		return *m.ModuleFilename
	}
	return ""
}

func (m *EventLogRecord) GetModuleFilepath() string {
	if m != nil && m.ModuleFilepath != nil {
		return *m.ModuleFilepath
	}
	return ""
}

func (m *EventLogRecord) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *EventLogRecord) GetImageFileVersion() string {
	if m != nil && m.ImageFileVersion != nil {
		return *m.ImageFileVersion
	}
	return ""
}

func (m *EventLogRecord) GetModuleFileVersion() string {
	if m != nil && m.ModuleFileVersion != nil {
		return *m.ModuleFileVersion
	}
	return ""
}

func (m *EventLogRecord) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *EventLogRecord) GetModuleFileMD5() string {
	if m != nil && m.ModuleFileMD5 != nil {
		return *m.ModuleFileMD5
	}
	return ""
}

func (m *EventLogRecord) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *EventLogRecord) GetDomainName() string {
	if m != nil && m.DomainName != nil {
		return *m.DomainName
	}
	return ""
}

func (m *EventLogRecord) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *EventLogRecord) GetFileContents() []byte {
	if m != nil {
		return m.FileContents
	}
	return nil
}

func (m *EventLogRecord) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *EventLogRecord) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*EventLogRecord)(nil), "EventLogRecord")
}

var fileDescriptor16 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x4e, 0xdb, 0x40,
	0x10, 0xc6, 0x05, 0xa4, 0x10, 0x0f, 0x89, 0x93, 0x98, 0x04, 0x06, 0x7a, 0x89, 0x38, 0x71, 0xca,
	0xad, 0xa7, 0xde, 0x5c, 0x5a, 0x14, 0xa9, 0xa0, 0xaa, 0x7f, 0xcf, 0x8b, 0x3d, 0x71, 0x57, 0xb2,
	0x77, 0xa3, 0xdd, 0x75, 0xa4, 0xf4, 0xd8, 0x77, 0xea, 0x33, 0xf5, 0x35, 0x3a, 0x3b, 0x49, 0x88,
	0x28, 0x17, 0x4b, 0xfe, 0xcd, 0x37, 0xf3, 0xcd, 0xce, 0x0c, 0x8c, 0xdf, 0xaf, 0xc8, 0x84, 0x8f,
	0xb6, 0xfa, 0x4c, 0x85, 0x75, 0xe5, 0x6c, 0xe9, 0x6c, 0xb0, 0x57, 0xd9, 0x27, 0xeb, 0x43, 0xe5,
	0xc8, 0x7f, 0x5d, 0x2f, 0x69, 0xc3, 0xae, 0xff, 0x76, 0x20, 0x7d, 0x2e, 0xce, 0xa6, 0x90, 0x04,
	0xdd, 0xd0, 0x97, 0xa0, 0x9a, 0x25, 0x1e, 0x4c, 0x0f, 0x6f, 0x8e, 0xf2, 0xfe, 0xef, 0x3f, 0x28,
	0xd0, 0x47, 0x98, 0xbd, 0x86, 0x44, 0x55, 0x9c, 0x73, 0xf7, 0x6d, 0x7e, 0x8b, 0x87, 0xac, 0x48,
	0xf2, 0x2e, 0x2b, 0x3a, 0x6d, 0xab, 0xcb, 0x6c, 0x0c, 0x3d, 0x27, 0x85, 0x1e, 0xda, 0xe6, 0x91,
	0x1c, 0x1e, 0x71, 0xbc, 0x9f, 0x0d, 0xe0, 0xa4, 0xb6, 0xd5, 0x42, 0xd7, 0x84, 0x9d, 0x98, 0x90,
	0x5d, 0xc0, 0x80, 0xa2, 0xef, 0xbc, 0xe4, 0x8f, 0x5e, 0x68, 0x56, 0xbe, 0x12, 0xe5, 0x10, 0xba,
	0x85, 0x0a, 0x54, 0x59, 0xb7, 0xc6, 0x63, 0x21, 0x13, 0xe8, 0x47, 0xef, 0x3b, 0x32, 0xe4, 0x38,
	0x52, 0xe2, 0x89, 0xe0, 0x33, 0x38, 0x8d, 0xf8, 0x87, 0xd3, 0x21, 0x90, 0xc1, 0xee, 0xce, 0x87,
	0xbb, 0xf4, 0xdc, 0x1e, 0x26, 0xe2, 0x33, 0x82, 0x44, 0x7c, 0xe2, 0x9b, 0x11, 0x44, 0x93, 0x01,
	0x78, 0xdb, 0xba, 0x82, 0x1e, 0x54, 0x43, 0x78, 0x2a, 0x32, 0xf6, 0xd0, 0x0d, 0x67, 0x7d, 0xe0,
	0x0e, 0x4d, 0xc4, 0xbd, 0xe9, 0xc1, 0x7f, 0x78, 0xa9, 0xc2, 0x4f, 0xec, 0x0b, 0x3e, 0x87, 0xb4,
	0xb1, 0x65, 0x5b, 0xef, 0xe5, 0xe9, 0x4b, 0x2e, 0xfa, 0x81, 0x70, 0x6e, 0xd5, 0x93, 0x5b, 0xe9,
	0xad, 0xe5, 0x50, 0x20, 0xc2, 0xf0, 0xa9, 0xf6, 0x77, 0x72, 0x5e, 0x5b, 0x83, 0x23, 0x89, 0x5c,
	0xc2, 0x68, 0x5f, 0x66, 0x17, 0xca, 0x24, 0xc4, 0xd3, 0x7d, 0x4a, 0xba, 0xbf, 0x7d, 0x83, 0x67,
	0xbb, 0x36, 0xf7, 0x09, 0x11, 0x8f, 0x77, 0xb6, 0xaa, 0x28, 0x6c, 0x6b, 0x82, 0xd8, 0x4e, 0x04,
	0xf2, 0xeb, 0x4b, 0xdb, 0x28, 0x6d, 0x84, 0x9d, 0x0b, 0x4b, 0xe1, 0xd8, 0xeb, 0x40, 0xf3, 0x12,
	0x2f, 0xe4, 0xff, 0x06, 0x7a, 0x71, 0x55, 0xef, 0xac, 0xe1, 0xc9, 0x06, 0x8f, 0xc8, 0xb4, 0x97,
	0x67, 0xbc, 0xe3, 0xb4, 0xb6, 0xa6, 0x9a, 0xae, 0x94, 0x7b, 0xd4, 0x46, 0xb9, 0x75, 0xdc, 0x56,
	0x54, 0x4a, 0xad, 0xcb, 0xed, 0x0c, 0xe4, 0x0e, 0xf0, 0x2a, 0xfe, 0xed, 0xef, 0x22, 0x7f, 0x0b,
	0xd7, 0x85, 0x6d, 0x66, 0xbf, 0xf4, 0x82, 0x6b, 0xce, 0xe2, 0x38, 0xc8, 0x6d, 0x8e, 0xb0, 0xb0,
	0xf5, 0x6c, 0xbb, 0xb4, 0x7c, 0xf2, 0xfc, 0x18, 0xef, 0x37, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x01, 0x17, 0x1b, 0xdd, 0xd1, 0x02, 0x00, 0x00,
}

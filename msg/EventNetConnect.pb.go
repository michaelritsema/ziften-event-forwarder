// Code generated by protoc-gen-go.
// source: EventNetConnect.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EventNetConnect struct {
	Pid              *uint32 `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	Application      *string `protobuf:"bytes,2,req,name=application" json:"application,omitempty"`
	Incoming         *bool   `protobuf:"varint,3,req,name=incoming" json:"incoming,omitempty"`
	SrcAddress       *string `protobuf:"bytes,4,req,name=srcAddress" json:"srcAddress,omitempty"`
	SrcPort          *uint32 `protobuf:"varint,5,req,name=srcPort" json:"srcPort,omitempty"`
	DestAddress      *string `protobuf:"bytes,6,req,name=destAddress" json:"destAddress,omitempty"`
	DestPort         *uint32 `protobuf:"varint,7,req,name=destPort" json:"destPort,omitempty"`
	Timestamp        *uint32 `protobuf:"varint,8,req,name=timestamp" json:"timestamp,omitempty"`
	Uuid             *string `protobuf:"bytes,9,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EventNetConnect) Reset()                    { *m = EventNetConnect{} }
func (m *EventNetConnect) String() string            { return proto.CompactTextString(m) }
func (*EventNetConnect) ProtoMessage()               {}
func (*EventNetConnect) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{0} }

func (m *EventNetConnect) GetPid() uint32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *EventNetConnect) GetApplication() string {
	if m != nil && m.Application != nil {
		return *m.Application
	}
	return ""
}

func (m *EventNetConnect) GetIncoming() bool {
	if m != nil && m.Incoming != nil {
		return *m.Incoming
	}
	return false
}

func (m *EventNetConnect) GetSrcAddress() string {
	if m != nil && m.SrcAddress != nil {
		return *m.SrcAddress
	}
	return ""
}

func (m *EventNetConnect) GetSrcPort() uint32 {
	if m != nil && m.SrcPort != nil {
		return *m.SrcPort
	}
	return 0
}

func (m *EventNetConnect) GetDestAddress() string {
	if m != nil && m.DestAddress != nil {
		return *m.DestAddress
	}
	return ""
}

func (m *EventNetConnect) GetDestPort() uint32 {
	if m != nil && m.DestPort != nil {
		return *m.DestPort
	}
	return 0
}

func (m *EventNetConnect) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *EventNetConnect) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*EventNetConnect)(nil), "EventNetConnect")
}

var fileDescriptor17 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0x5b, 0x6d, 0x32, 0x45, 0xaa, 0x2b, 0x96, 0xc5, 0x53, 0xe9, 0xa9, 0xa7, 0x3c,
	0x81, 0x17, 0x23, 0x1e, 0x95, 0x1e, 0x7c, 0x81, 0xb0, 0x3b, 0x86, 0x85, 0x66, 0x67, 0xd9, 0x9d,
	0x16, 0xf4, 0xe8, 0x3b, 0x79, 0xf3, 0xe1, 0x9c, 0x6e, 0xc8, 0x25, 0xc7, 0xf9, 0xf8, 0xf8, 0x98,
	0x1f, 0x1e, 0x5e, 0xcf, 0xe8, 0xf9, 0x1d, 0xf9, 0x85, 0xbc, 0x47, 0xc3, 0x75, 0x88, 0xc4, 0xf4,
	0xa8, 0x0e, 0x94, 0xb8, 0x8b, 0x98, 0x3e, 0xbe, 0x02, 0x0e, 0x6c, 0xf7, 0x57, 0xc0, 0x7a, 0x62,
	0xab, 0x15, 0xcc, 0x83, 0xb3, 0xba, 0xd8, 0xce, 0xf6, 0x37, 0xea, 0x1e, 0x56, 0x6d, 0x08, 0x47,
	0x67, 0x5a, 0x76, 0xe4, 0xf5, 0x4c, 0x60, 0xa5, 0x6e, 0xa1, 0x74, 0xde, 0x50, 0xef, 0x7c, 0xa7,
	0xe7, 0x42, 0x4a, 0xa5, 0x00, 0x52, 0x34, 0xcf, 0xd6, 0x4a, 0x3e, 0xe9, 0x45, 0xb6, 0xd6, 0xb0,
	0x14, 0x76, 0xa0, 0xc8, 0xfa, 0x6a, 0x6c, 0x59, 0x4c, 0x3c, 0x5a, 0xd7, 0x63, 0xeb, 0x02, 0xb3,
	0xb6, 0xcc, 0xda, 0x1d, 0x54, 0xec, 0x7a, 0x61, 0x6d, 0x1f, 0x74, 0x99, 0xd1, 0x06, 0x16, 0xa7,
	0x93, 0xfc, 0x54, 0x6d, 0x8b, 0x7d, 0xd5, 0x94, 0x3f, 0xbf, 0x3a, 0xdf, 0xcd, 0x13, 0xec, 0xe4,
	0x8d, 0xfa, 0xdb, 0x7d, 0x32, 0xfa, 0x3a, 0x61, 0x3c, 0x63, 0x1c, 0x96, 0x19, 0x3a, 0xd6, 0xd2,
	0x48, 0x6d, 0x87, 0xcd, 0x66, 0xb2, 0xf0, 0x6d, 0xe0, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xca,
	0x52, 0xef, 0x56, 0x28, 0x01, 0x00, 0x00,
}

// Code generated by protoc-gen-go.
// source: OSXFileContents.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Send File to server
type OSXFileContents struct {
	// The UTC time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp *int64 `protobuf:"varint,1,req,name=timeStamp" json:"timeStamp,omitempty"`
	// The unique identifier of the agent. This field is used by the server to distinguish agents.
	AgentGUID *string `protobuf:"bytes,2,req,name=agentGUID" json:"agentGUID,omitempty"`
	// Fully qualified path to file (also, what was passed in from AgentCommand)
	ImageFilePath *string `protobuf:"bytes,3,req,name=imageFilePath" json:"imageFilePath,omitempty"`
	// File Contents - can be zero length
	FileContents []byte `protobuf:"bytes,4,req,name=fileContents" json:"fileContents,omitempty"`
	// File Creation Timestamp
	CreatedTimeStamp *int64 `protobuf:"varint,5,opt,name=CreatedTimeStamp" json:"CreatedTimeStamp,omitempty"`
	// Last Modified File Timestamp
	ModifiedTimeStamp *int64 `protobuf:"varint,6,opt,name=ModifiedTimeStamp" json:"ModifiedTimeStamp,omitempty"`
	// MD5 of the File Contents to double check file validity and pattern matching
	ImageFileMD5 *string `protobuf:"bytes,7,req,name=imageFileMD5" json:"imageFileMD5,omitempty"`
	// The Command Identifer from the AgentCommand message
	CommandIdentifier *uint64 `protobuf:"varint,8,req,name=commandIdentifier" json:"commandIdentifier,omitempty"`
	// MD5 of the server name we are reporting to
	SiteId *string `protobuf:"bytes,9,opt,name=siteId" json:"siteId,omitempty"`
	Uuid   *string `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	// Added to count the number of times this message has been ATTEMPTED to transmit but error has occured and
	// message has been re-enqueued
	RetryCount       *int32 `protobuf:"varint,11,opt,name=retryCount,def=0" json:"retryCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OSXFileContents) Reset()                    { *m = OSXFileContents{} }
func (m *OSXFileContents) String() string            { return proto.CompactTextString(m) }
func (*OSXFileContents) ProtoMessage()               {}
func (*OSXFileContents) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{0} }

const Default_OSXFileContents_RetryCount int32 = 0

func (m *OSXFileContents) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *OSXFileContents) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *OSXFileContents) GetImageFilePath() string {
	if m != nil && m.ImageFilePath != nil {
		return *m.ImageFilePath
	}
	return ""
}

func (m *OSXFileContents) GetFileContents() []byte {
	if m != nil {
		return m.FileContents
	}
	return nil
}

func (m *OSXFileContents) GetCreatedTimeStamp() int64 {
	if m != nil && m.CreatedTimeStamp != nil {
		return *m.CreatedTimeStamp
	}
	return 0
}

func (m *OSXFileContents) GetModifiedTimeStamp() int64 {
	if m != nil && m.ModifiedTimeStamp != nil {
		return *m.ModifiedTimeStamp
	}
	return 0
}

func (m *OSXFileContents) GetImageFileMD5() string {
	if m != nil && m.ImageFileMD5 != nil {
		return *m.ImageFileMD5
	}
	return ""
}

func (m *OSXFileContents) GetCommandIdentifier() uint64 {
	if m != nil && m.CommandIdentifier != nil {
		return *m.CommandIdentifier
	}
	return 0
}

func (m *OSXFileContents) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *OSXFileContents) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *OSXFileContents) GetRetryCount() int32 {
	if m != nil && m.RetryCount != nil {
		return *m.RetryCount
	}
	return Default_OSXFileContents_RetryCount
}

func init() {
	proto.RegisterType((*OSXFileContents)(nil), "OSXFileContents")
}

var fileDescriptor47 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x50, 0x4b, 0x6b, 0x32, 0x31,
	0x14, 0xc5, 0xe7, 0xe7, 0xdc, 0x4f, 0xfb, 0x08, 0x55, 0x6e, 0x1f, 0x8b, 0xc1, 0x95, 0xdd, 0x0c,
	0x62, 0xe9, 0xa6, 0x74, 0x35, 0x4a, 0x8b, 0x0b, 0xa9, 0xa0, 0x85, 0x6e, 0x53, 0x13, 0x6d, 0xc0,
	0x49, 0x24, 0x89, 0xc2, 0x74, 0xd9, 0xff, 0xd4, 0x7d, 0x7f, 0x5a, 0xef, 0xcc, 0x80, 0x58, 0xb3,
	0xcb, 0x39, 0xe7, 0xde, 0x73, 0xcf, 0x81, 0xf6, 0xcb, 0xec, 0xed, 0x49, 0xad, 0xe5, 0xd0, 0x68,
	0x2f, 0xb5, 0x77, 0xd1, 0xc6, 0x1a, 0x6f, 0xae, 0xd8, 0xd4, 0x38, 0xbf, 0xb2, 0xd2, 0xcd, 0xd3,
	0x8d, 0x2c, 0xb0, 0xee, 0x4f, 0x19, 0x4e, 0x8f, 0xd4, 0x2c, 0x84, 0xc0, 0xab, 0x44, 0xce, 0x3c,
	0x4f, 0x36, 0x58, 0x0a, 0xcb, 0xbd, 0x4a, 0xdc, 0xfa, 0xfa, 0xc6, 0x1c, 0x74, 0x19, 0xc8, 0xae,
	0x21, 0xe0, 0x2b, 0xd2, 0x3e, 0xbf, 0x8e, 0x47, 0x58, 0x26, 0x45, 0x10, 0x37, 0x48, 0x51, 0xdd,
	0x6e, 0x95, 0x60, 0x6d, 0x68, 0xa9, 0x84, 0xe8, 0x6c, 0xe7, 0x94, 0xfb, 0x0f, 0xac, 0x64, 0x02,
	0x36, 0x80, 0xe6, 0xf2, 0xc0, 0x05, 0xab, 0x84, 0x36, 0xe3, 0x1b, 0x1a, 0xc3, 0xb5, 0xd1, 0xab,
	0x70, 0xc7, 0xed, 0xbb, 0xd2, 0xdc, 0xa6, 0xbd, 0xbb, 0x41, 0x3f, 0x7f, 0xb7, 0x0c, 0xe1, 0x6c,
	0x68, 0x25, 0xf7, 0x52, 0xcc, 0xf7, 0x07, 0xd5, 0xc2, 0x52, 0xaf, 0xc2, 0x2e, 0xe1, 0x7c, 0x62,
	0x84, 0x5a, 0xaa, 0x43, 0xaa, 0x9e, 0x53, 0x17, 0xd0, 0xdc, 0xfb, 0x4f, 0x46, 0xf7, 0xf8, 0x2f,
	0xb7, 0xa7, 0x81, 0x85, 0x49, 0x12, 0xae, 0xc5, 0x58, 0x90, 0x7f, 0x36, 0x69, 0xb1, 0x41, 0x54,
	0x95, 0x9d, 0x40, 0xdd, 0x29, 0x2f, 0xc7, 0x02, 0x03, 0x5a, 0x10, 0xb0, 0x0e, 0xe4, 0x41, 0x10,
	0xb2, 0xdf, 0x9f, 0x60, 0x60, 0xa5, 0xb7, 0xe9, 0xd0, 0x6c, 0xb5, 0xc7, 0xff, 0xc4, 0xd6, 0x1e,
	0x4a, 0xfd, 0xf8, 0x11, 0xba, 0xb4, 0x39, 0xfa, 0x54, 0x4b, 0x0a, 0x16, 0x39, 0x69, 0x77, 0xd2,
	0x16, 0xed, 0x2e, 0xcc, 0x3a, 0xa2, 0xca, 0x1c, 0x1d, 0x13, 0x77, 0x8e, 0x5a, 0x9e, 0x14, 0xf8,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x78, 0xb6, 0x85, 0x51, 0xac, 0x01, 0x00, 0x00,
}

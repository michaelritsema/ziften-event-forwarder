// Code generated by protoc-gen-go.
// source: ExtensionCatalogResponse.proto
// DO NOT EDIT!

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ExtensionCatalogResponse_ExtensionState int32

const (
	ExtensionCatalogResponse_Enabled  ExtensionCatalogResponse_ExtensionState = 1
	ExtensionCatalogResponse_Disabled ExtensionCatalogResponse_ExtensionState = 2
)

var ExtensionCatalogResponse_ExtensionState_name = map[int32]string{
	1: "Enabled",
	2: "Disabled",
}
var ExtensionCatalogResponse_ExtensionState_value = map[string]int32{
	"Enabled":  1,
	"Disabled": 2,
}

func (x ExtensionCatalogResponse_ExtensionState) Enum() *ExtensionCatalogResponse_ExtensionState {
	p := new(ExtensionCatalogResponse_ExtensionState)
	*p = x
	return p
}
func (x ExtensionCatalogResponse_ExtensionState) String() string {
	return proto.EnumName(ExtensionCatalogResponse_ExtensionState_name, int32(x))
}
func (x *ExtensionCatalogResponse_ExtensionState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtensionCatalogResponse_ExtensionState_value, data, "ExtensionCatalogResponse_ExtensionState")
	if err != nil {
		return err
	}
	*x = ExtensionCatalogResponse_ExtensionState(value)
	return nil
}
func (ExtensionCatalogResponse_ExtensionState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{0, 0}
}

// Extension run hosting; what is running it
type ExtensionCatalogResponse_RunHosting int32

const (
	ExtensionCatalogResponse_Service   ExtensionCatalogResponse_RunHosting = 1
	ExtensionCatalogResponse_UserProxy ExtensionCatalogResponse_RunHosting = 2
)

var ExtensionCatalogResponse_RunHosting_name = map[int32]string{
	1: "Service",
	2: "UserProxy",
}
var ExtensionCatalogResponse_RunHosting_value = map[string]int32{
	"Service":   1,
	"UserProxy": 2,
}

func (x ExtensionCatalogResponse_RunHosting) Enum() *ExtensionCatalogResponse_RunHosting {
	p := new(ExtensionCatalogResponse_RunHosting)
	*p = x
	return p
}
func (x ExtensionCatalogResponse_RunHosting) String() string {
	return proto.EnumName(ExtensionCatalogResponse_RunHosting_name, int32(x))
}
func (x *ExtensionCatalogResponse_RunHosting) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtensionCatalogResponse_RunHosting_value, data, "ExtensionCatalogResponse_RunHosting")
	if err != nil {
		return err
	}
	*x = ExtensionCatalogResponse_RunHosting(value)
	return nil
}
func (ExtensionCatalogResponse_RunHosting) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{0, 1}
}

// Extension run lifetime; if relevant (for spawned processes, etc.)
type ExtensionCatalogResponse_RunLifetime int32

const (
	ExtensionCatalogResponse_Ephemeral  ExtensionCatalogResponse_RunLifetime = 1
	ExtensionCatalogResponse_Persistent ExtensionCatalogResponse_RunLifetime = 2
)

var ExtensionCatalogResponse_RunLifetime_name = map[int32]string{
	1: "Ephemeral",
	2: "Persistent",
}
var ExtensionCatalogResponse_RunLifetime_value = map[string]int32{
	"Ephemeral":  1,
	"Persistent": 2,
}

func (x ExtensionCatalogResponse_RunLifetime) Enum() *ExtensionCatalogResponse_RunLifetime {
	p := new(ExtensionCatalogResponse_RunLifetime)
	*p = x
	return p
}
func (x ExtensionCatalogResponse_RunLifetime) String() string {
	return proto.EnumName(ExtensionCatalogResponse_RunLifetime_name, int32(x))
}
func (x *ExtensionCatalogResponse_RunLifetime) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtensionCatalogResponse_RunLifetime_value, data, "ExtensionCatalogResponse_RunLifetime")
	if err != nil {
		return err
	}
	*x = ExtensionCatalogResponse_RunLifetime(value)
	return nil
}
func (ExtensionCatalogResponse_RunLifetime) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{0, 2}
}

// Extension run type; under what circumstances do we run?
type ExtensionCatalogResponse_RunType int32

const (
	ExtensionCatalogResponse_Once         ExtensionCatalogResponse_RunType = 1
	ExtensionCatalogResponse_OnBoot       ExtensionCatalogResponse_RunType = 2
	ExtensionCatalogResponse_OnIdle       ExtensionCatalogResponse_RunType = 3
	ExtensionCatalogResponse_Periodically ExtensionCatalogResponse_RunType = 4
	ExtensionCatalogResponse_OnDemand     ExtensionCatalogResponse_RunType = 5
)

var ExtensionCatalogResponse_RunType_name = map[int32]string{
	1: "Once",
	2: "OnBoot",
	3: "OnIdle",
	4: "Periodically",
	5: "OnDemand",
}
var ExtensionCatalogResponse_RunType_value = map[string]int32{
	"Once":         1,
	"OnBoot":       2,
	"OnIdle":       3,
	"Periodically": 4,
	"OnDemand":     5,
}

func (x ExtensionCatalogResponse_RunType) Enum() *ExtensionCatalogResponse_RunType {
	p := new(ExtensionCatalogResponse_RunType)
	*p = x
	return p
}
func (x ExtensionCatalogResponse_RunType) String() string {
	return proto.EnumName(ExtensionCatalogResponse_RunType_name, int32(x))
}
func (x *ExtensionCatalogResponse_RunType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtensionCatalogResponse_RunType_value, data, "ExtensionCatalogResponse_RunType")
	if err != nil {
		return err
	}
	*x = ExtensionCatalogResponse_RunType(value)
	return nil
}
func (ExtensionCatalogResponse_RunType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor20, []int{0, 3}
}

// describes an extension installed on the agent; response to catalog request
type ExtensionCatalogResponse struct {
	// The standard fields
	// The time that the message was produced by the agent. Time is what was reported by the client clock.
	TimeStamp       *int64  `protobuf:"varint,1,opt,name=timeStamp" json:"timeStamp,omitempty"`
	SiteId          *string `protobuf:"bytes,2,opt,name=siteId" json:"siteId,omitempty"`
	ServerUUID      *string `protobuf:"bytes,3,opt,name=serverUUID" json:"serverUUID,omitempty"`
	ServerJobID     *int64  `protobuf:"varint,4,opt,name=serverJobID" json:"serverJobID,omitempty"`
	CorrelationUUID *string `protobuf:"bytes,5,opt,name=correlationUUID" json:"correlationUUID,omitempty"`
	AgentGUID       *string `protobuf:"bytes,6,opt,name=agentGUID" json:"agentGUID,omitempty"`
	MessageVersion  *int32  `protobuf:"varint,7,opt,name=messageVersion,def=1" json:"messageVersion,omitempty"`
	// Distinctly identifies this extension object; used to refer to this particular script
	// for various operations.  Note:  the null UUID is used in the special case to indicate
	// 'there are no installed extensions'.
	ExtensionUUID *string                                  `protobuf:"bytes,8,opt,name=extensionUUID" json:"extensionUUID,omitempty"`
	State         *ExtensionCatalogResponse_ExtensionState `protobuf:"varint,9,opt,name=state,enum=ExtensionCatalogResponse_ExtensionState" json:"state,omitempty"`
	// the command line parameters
	ExtensionParameters []string                              `protobuf:"bytes,10,rep,name=extensionParameters" json:"extensionParameters,omitempty"`
	RunHosting          *ExtensionCatalogResponse_RunHosting  `protobuf:"varint,11,opt,name=runHosting,enum=ExtensionCatalogResponse_RunHosting" json:"runHosting,omitempty"`
	RunLifetime         *ExtensionCatalogResponse_RunLifetime `protobuf:"varint,12,opt,name=runLifetime,enum=ExtensionCatalogResponse_RunLifetime" json:"runLifetime,omitempty"`
	RunType             *ExtensionCatalogResponse_RunType     `protobuf:"varint,13,opt,name=runType,enum=ExtensionCatalogResponse_RunType" json:"runType,omitempty"`
	// If RunPeriodically then number of seconds between runs
	RunPeriodicallySec *int32  `protobuf:"varint,14,opt,name=runPeriodicallySec" json:"runPeriodicallySec,omitempty"`
	Uuid               *string `protobuf:"bytes,15,opt,name=uuid" json:"uuid,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *ExtensionCatalogResponse) Reset()                    { *m = ExtensionCatalogResponse{} }
func (m *ExtensionCatalogResponse) String() string            { return proto.CompactTextString(m) }
func (*ExtensionCatalogResponse) ProtoMessage()               {}
func (*ExtensionCatalogResponse) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

const Default_ExtensionCatalogResponse_MessageVersion int32 = 1

func (m *ExtensionCatalogResponse) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *ExtensionCatalogResponse) GetSiteId() string {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return ""
}

func (m *ExtensionCatalogResponse) GetServerUUID() string {
	if m != nil && m.ServerUUID != nil {
		return *m.ServerUUID
	}
	return ""
}

func (m *ExtensionCatalogResponse) GetServerJobID() int64 {
	if m != nil && m.ServerJobID != nil {
		return *m.ServerJobID
	}
	return 0
}

func (m *ExtensionCatalogResponse) GetCorrelationUUID() string {
	if m != nil && m.CorrelationUUID != nil {
		return *m.CorrelationUUID
	}
	return ""
}

func (m *ExtensionCatalogResponse) GetAgentGUID() string {
	if m != nil && m.AgentGUID != nil {
		return *m.AgentGUID
	}
	return ""
}

func (m *ExtensionCatalogResponse) GetMessageVersion() int32 {
	if m != nil && m.MessageVersion != nil {
		return *m.MessageVersion
	}
	return Default_ExtensionCatalogResponse_MessageVersion
}

func (m *ExtensionCatalogResponse) GetExtensionUUID() string {
	if m != nil && m.ExtensionUUID != nil {
		return *m.ExtensionUUID
	}
	return ""
}

func (m *ExtensionCatalogResponse) GetState() ExtensionCatalogResponse_ExtensionState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ExtensionCatalogResponse_Enabled
}

func (m *ExtensionCatalogResponse) GetExtensionParameters() []string {
	if m != nil {
		return m.ExtensionParameters
	}
	return nil
}

func (m *ExtensionCatalogResponse) GetRunHosting() ExtensionCatalogResponse_RunHosting {
	if m != nil && m.RunHosting != nil {
		return *m.RunHosting
	}
	return ExtensionCatalogResponse_Service
}

func (m *ExtensionCatalogResponse) GetRunLifetime() ExtensionCatalogResponse_RunLifetime {
	if m != nil && m.RunLifetime != nil {
		return *m.RunLifetime
	}
	return ExtensionCatalogResponse_Ephemeral
}

func (m *ExtensionCatalogResponse) GetRunType() ExtensionCatalogResponse_RunType {
	if m != nil && m.RunType != nil {
		return *m.RunType
	}
	return ExtensionCatalogResponse_Once
}

func (m *ExtensionCatalogResponse) GetRunPeriodicallySec() int32 {
	if m != nil && m.RunPeriodicallySec != nil {
		return *m.RunPeriodicallySec
	}
	return 0
}

func (m *ExtensionCatalogResponse) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*ExtensionCatalogResponse)(nil), "ExtensionCatalogResponse")
	proto.RegisterEnum("ExtensionCatalogResponse_ExtensionState", ExtensionCatalogResponse_ExtensionState_name, ExtensionCatalogResponse_ExtensionState_value)
	proto.RegisterEnum("ExtensionCatalogResponse_RunHosting", ExtensionCatalogResponse_RunHosting_name, ExtensionCatalogResponse_RunHosting_value)
	proto.RegisterEnum("ExtensionCatalogResponse_RunLifetime", ExtensionCatalogResponse_RunLifetime_name, ExtensionCatalogResponse_RunLifetime_value)
	proto.RegisterEnum("ExtensionCatalogResponse_RunType", ExtensionCatalogResponse_RunType_name, ExtensionCatalogResponse_RunType_value)
}

var fileDescriptor20 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x53, 0x5d, 0x6b, 0x1a, 0x4d,
	0x14, 0xc6, 0xf8, 0x7d, 0xd4, 0x8d, 0x4c, 0xe0, 0x65, 0xde, 0xb4, 0x34, 0x46, 0x5a, 0x10, 0x5a,
	0x84, 0xe6, 0xa6, 0x25, 0x97, 0x5b, 0xa5, 0xb5, 0x1f, 0xb8, 0xc4, 0xda, 0xfb, 0xc9, 0xee, 0x89,
	0x1d, 0xd8, 0x9d, 0x59, 0x66, 0xc6, 0x12, 0x7b, 0xd7, 0xfe, 0xa7, 0xfe, 0xbf, 0x9e, 0xd9, 0x8d,
	0x62, 0x05, 0x73, 0xa7, 0xe7, 0xf9, 0x98, 0xf3, 0x3c, 0x33, 0x0b, 0xcf, 0xa6, 0xf7, 0x0e, 0x95,
	0x95, 0x5a, 0xbd, 0x13, 0x4e, 0xa4, 0x7a, 0x75, 0x83, 0x36, 0xd7, 0xca, 0xe2, 0x38, 0x37, 0xda,
	0xe9, 0x73, 0x16, 0x69, 0xeb, 0x56, 0x06, 0xed, 0xd7, 0x4d, 0xfe, 0x30, 0x1b, 0xfe, 0x6a, 0x00,
	0x3f, 0x26, 0x63, 0x03, 0x68, 0x3b, 0x99, 0xe1, 0xc2, 0x89, 0x2c, 0xe7, 0x95, 0x41, 0x65, 0x54,
	0x0d, 0x7b, 0xbf, 0xff, 0xf0, 0x62, 0x68, 0xfd, 0x90, 0x05, 0xd0, 0xb0, 0xd2, 0xe1, 0x2c, 0xe1,
	0x27, 0x04, 0xb7, 0xd9, 0x53, 0x00, 0x8b, 0xe6, 0x07, 0x9a, 0xe5, 0x72, 0x36, 0xe1, 0x55, 0x3f,
	0x0b, 0x5b, 0x24, 0xa9, 0xad, 0xd7, 0x32, 0x61, 0x67, 0xd0, 0x29, 0xd1, 0x8f, 0xfa, 0x96, 0xe0,
	0x9a, 0x77, 0x64, 0x97, 0x70, 0x1a, 0x6b, 0x63, 0x30, 0x15, 0x8e, 0x56, 0x28, 0x74, 0xf5, 0x03,
	0xdd, 0x13, 0x68, 0x8b, 0x15, 0x2a, 0xf7, 0xde, 0x83, 0x8d, 0x03, 0xf0, 0x7f, 0x08, 0x68, 0x1b,
	0x4b, 0x84, 0x6f, 0x68, 0x7c, 0x0a, 0xde, 0x24, 0x46, 0xfd, 0xba, 0xf2, 0x9a, 0x5d, 0x40, 0x0f,
	0xb7, 0xd9, 0x0a, 0xe3, 0xd6, 0x81, 0xf6, 0x0d, 0xd4, 0x29, 0x87, 0x43, 0xde, 0x26, 0x20, 0xb8,
	0x1a, 0x8d, 0x8f, 0x36, 0xb8, 0x03, 0x16, 0x9e, 0x4f, 0x1b, 0x9d, 0xed, 0x9c, 0x23, 0x61, 0x44,
	0x86, 0x8e, 0x0e, 0xe7, 0x30, 0xa8, 0x52, 0x09, 0x6f, 0x01, 0xcc, 0x5a, 0x7d, 0xa0, 0xb2, 0xa5,
	0x5a, 0xf1, 0x4e, 0x61, 0xfd, 0xfc, 0xb8, 0xf5, 0xcd, 0x8e, 0xcb, 0xae, 0xa1, 0x43, 0xca, 0xcf,
	0xf2, 0x0e, 0x7d, 0xc5, 0xbc, 0x5b, 0x48, 0x5f, 0x3c, 0x2a, 0xdd, 0x92, 0xd9, 0x15, 0x34, 0x49,
	0xeb, 0xaf, 0x96, 0xf7, 0x0a, 0xdd, 0xe5, 0xa3, 0x3a, 0x4f, 0x64, 0xe7, 0xc0, 0x48, 0x13, 0xa1,
	0x91, 0x3a, 0x91, 0xb1, 0x48, 0xd3, 0xcd, 0x02, 0x63, 0x1e, 0xf8, 0xfe, 0xd8, 0x7f, 0x50, 0x74,
	0xc4, 0x4f, 0xff, 0xed, 0x6c, 0xf8, 0x12, 0x82, 0x83, 0x32, 0x3a, 0xd0, 0x9c, 0x2a, 0x71, 0x9b,
	0x62, 0xd2, 0xaf, 0xb0, 0x2e, 0xb4, 0x26, 0xd2, 0x96, 0xff, 0x4e, 0x86, 0x23, 0x80, 0xbd, 0x78,
	0x44, 0x5c, 0xd0, 0xfd, 0xcb, 0x18, 0x89, 0xd8, 0x83, 0xf6, 0x92, 0x5e, 0x43, 0x64, 0xf4, 0xfd,
	0x86, 0x98, 0xaf, 0xa0, 0xb3, 0x9f, 0x86, 0xd0, 0x69, 0xfe, 0x1d, 0x33, 0x34, 0x22, 0x25, 0x72,
	0x00, 0x10, 0xf9, 0xdb, 0xb5, 0x74, 0xb0, 0x23, 0xf6, 0x27, 0x68, 0x6e, 0x33, 0xb4, 0xa0, 0x36,
	0x57, 0x85, 0x23, 0x40, 0x63, 0xae, 0x42, 0xad, 0x89, 0x50, 0xfe, 0x9e, 0x25, 0x29, 0xf6, 0xab,
	0xac, 0x0f, 0xdd, 0xfd, 0x88, 0xfd, 0x9a, 0x5f, 0x72, 0xae, 0x26, 0x98, 0x09, 0x95, 0xf4, 0xeb,
	0xe1, 0x14, 0x86, 0xb1, 0xce, 0xc6, 0x3f, 0xe5, 0x1d, 0xb9, 0x8f, 0xcb, 0x17, 0x5a, 0x7e, 0x1e,
	0xb1, 0x4e, 0xc7, 0x0f, 0x8f, 0x2b, 0xbc, 0x38, 0xd6, 0xe6, 0x97, 0x92, 0xf0, 0x37, 0x00, 0x00,
	0xff, 0xff, 0xf2, 0xf6, 0xf5, 0xed, 0x7f, 0x03, 0x00, 0x00,
}
